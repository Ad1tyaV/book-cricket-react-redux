{"version":3,"sources":["redux-setup/actions/pickTeams.js","redux-setup/actions/scoreX.js","redux-setup/actions/completeInnings.js","redux-setup/actions/resetState.js","components/ScoreCard.js","redux-setup/actions/getTeamAction.js","helpers/asyncHelper.js","redux-setup/actions/dynamicSquadAction.js","components/MatchComponent.js","components/PickTeams.js","helpers/improvedRandomNumber.js","redux-setup/reducers/manageScores.js","redux-setup/reducers/initPickTeamsReducer.js","redux-setup/reducers/setFirstTeamsReducer.js","redux-setup/reducers/teamsReducer.js","redux-setup/reducers/dynamicSquads.js","redux-setup/store/index.js","App.js","reportWebVitals.js","index.js"],"names":["pickTeams","team1","team2","overs","format","dispatch","type","payload","scoreX","team","pitch","getState","pitchType","completeInnings","resetState","ScoreCard","props","ppl","Table","style","maxWidth","maxHeight","float","aria-label","TableBody","map","index","TableRow","TableCell","color","track","player_1","player_2","Math","min","max","teamData","team1Stats","team1BallsFacedByPlayer","Date","now","team2Stats","team2BallsFacedByPlayer","getTeamAction","TYPE","data","asyncHelper","url","a","fetch","response","json","dynamicSquadAction","connect","state","scoreData","manageScores","getTeams","scoreDispatch","X","completeInningsDispatch","resetDispatch","teamsDispatch","useState","message","setMessage","useRef","dynamicSquads","useSelector","useDispatch","useEffect","then","maxBalls","gameover","team1Wickets","team1BallsFaced","Object","keys","current","length","onStrike","batterIndex","offStrike","team2Total","team1Total","team2Wickets","team2BallsFaced","className","display","justifyContent","floor","toPrecision","currentTeamBatting","fontWeight","Button","variant","onClick","i","pickTeamDispatch","openTeam1","setOpenTeam1","openTeam2","setOpenTeam2","pitchToggle","setpitchToggle","firstTeam","setFirstTeam","secondTeam","setSecondTeam","selectedPitch","setSelectedPitch","selectedOvers","setSelectedOvers","oversToggle","setOversToggle","oversOptions","value","label","teams","marginLeft","marginTop","InputLabel","shrink","id","Select","labelId","open","onClose","onOpen","onChange","event","target","MenuItem","fontSize","SwapVert","htmlColor","option","selectedFormat","find","opt","OUTCOMES","FORMAT_BASE_FREQUENCIES","T20","AGGRESSIVE","ANCHOR","POWER_HITTER","ACCUMULATOR","ALL_ROUNDER","TAIL_ENDER","ODI_50","ODI_40","PITCH_MODIFIERS","NORMAL","wicket","dot","single","two","three","four","six","GREEN","HARD","WET","DUSTY","getImprovedRandomOutcome","playerArchetype","formatFreqs","baseFreq","frequency","pitchMod","f","round","sum","cumulativeSum","prefixSum","totalWeight","random","getPlayerArchetypeByPosition","archetypesByPosition","TEST","positions","RandomWithIndex","gameState","pitchTypeMap","mappedPitchType","initialState","innings","scoreRunsReducer","action","ballsFaced","currentScore","targetScore","wicketsLost","updatedRun","newstate","initPickTeams","team1Name","team2Name","team1Squad","team2Squad","setFirstTeams","TEAM1","India","0","1","2","3","4","5","6","7","8","9","10","Pakistan","Australia","England","SouthAfrica","NewZealand","WestIndies","SriLanka","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","document","title","newStore","AppBar","position","alignSelf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.140074b9.chunk.js","sourcesContent":["const pickTeams = (team1, team2, overs = 50, format = \"ODI_50\") => {\n  return (dispatch) => {\n    dispatch({ type: \"PICK_TEAMS\", payload: { team1: team1, team2: team2, overs: overs, format: format } });\n  };\n};\n\nexport default pickTeams;\n","const scoreX = (team, pitch) => {\n  return (dispatch, getState) => {\n    dispatch({ type: \"SCORE\", payload: { pitchType: pitch } });\n  };\n};\nexport default scoreX;\n","const completeInnings = (team) => {\n  return {\n    type: \"COMPLETE\",\n    payload: team,\n  };\n};\n\nexport default completeInnings;\n","const resetState = () => {\n  return {\n    type: \"RESET_STATE\",\n  };\n};\n\nexport default resetState;\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\n\nfunction ScoreCard(props) {\n  const ppl = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  return (\n    <div>\n      <Table\n        style={{ maxWidth: 500, maxHeight: 100, float: \"left\" }}\n        aria-label=\"customized table\"\n        key={Date.now() + 1}\n      >\n        <TableBody>\n          {/* <tr>{Object.keys(props.teamData[\"India\"]).map((key)=>[props.teamData[\"India\"][key],props.team1Stats[key]??0])}</tr> */}\n          {ppl.map((index) => {\n            return (\n              <>\n                <TableRow>\n                  <TableCell\n                    style={{\n                      color:\n                        props.track.team1.player_1 === index ||\n                        props.track.team1.player_2 === index\n                          ? \"#72ff72\"\n                          : (index >\n                              Math.min(\n                                props.track.team1.player_1,\n                                props.track.team1.player_2\n                              ) &&\n                              index <\n                                Math.max(\n                                  props.track.team1.player_1,\n                                  props.track.team1.player_2\n                                )) ||\n                            index <\n                              Math.min(\n                                props.track.team1.player_1,\n                                props.track.team1.player_2\n                              )\n                          ? \"red\"\n                          : \"gray\",\n                    }}\n                  >\n                    {props.teamData[props.team1][index]}\n                  </TableCell>\n                  <TableCell style={{ color: \"whitesmoke\" }}>\n                    {props.team1Stats[index] ?? 0} ({props.team1BallsFacedByPlayer?.[index] ?? 0})\n                  </TableCell>\n                </TableRow>\n              </>\n            );\n          })}\n        </TableBody>\n      </Table>\n\n      <Table\n        style={{ maxWidth: 500, maxHeight: 100, float: \"right\" }}\n        aria-label=\"customized table\"\n        key={Date.now()}\n      >\n        <TableBody>\n          {ppl.map((index) => {\n            return (\n              <>\n                <TableRow>\n                  <TableCell\n                    style={{\n                      color:\n                        props.track.team2.player_1 === index ||\n                        props.track.team2.player_2 === index\n                          ? \"#72ff72\"\n                          : (index >\n                              Math.min(\n                                props.track.team2.player_1,\n                                props.track.team2.player_2\n                              ) &&\n                              index <\n                                Math.max(\n                                  props.track.team2.player_1,\n                                  props.track.team2.player_2\n                                )) ||\n                            index <\n                              Math.min(\n                                props.track.team2.player_1,\n                                props.track.team2.player_2\n                              )\n                          ? \"red\"\n                          : \"gray\",\n                    }}\n                  >\n                    {props.teamData[props.team2][index]}\n                  </TableCell>\n                  <TableCell style={{ color: \"whitesmoke\" }}>\n                    {props.team2Stats[index] ?? 0} ({props.team2BallsFacedByPlayer?.[index] ?? 0})\n                  </TableCell>\n                </TableRow>\n              </>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nexport default ScoreCard;\n","const getTeamAction = (TYPE, data) => {\n  let payload;\n  if (TYPE === \"SET_TEAM\") {\n    payload = data;\n  }\n\n  return (dispatch) => {\n    dispatch({ type: TYPE, payload: payload });\n  };\n};\n\nexport default getTeamAction;\n","export const asyncHelper = async (url) => {\n  let data;\n\n  try {\n    const response = await fetch(url);\n    data = await response.json();\n    return [200, data];\n  } catch (err) {\n    return [401, \"Something Went Wrong!\"];\n  }\n\n  // return [200, data];\n};\n","const dynamicSquadAction = (TYPE) => {\n  return (dispatch) => {\n    dispatch({ type: TYPE });\n  };\n};\n\nexport default dynamicSquadAction;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport scoreX from \"../redux-setup/actions/scoreX\";\nimport completeInnings from \"../redux-setup/actions/completeInnings\";\nimport resetState from \"../redux-setup/actions/resetState\";\nimport ScoreCard from \"./ScoreCard\";\nimport { Button } from \"@material-ui/core\";\nimport getTeamAction from \"../redux-setup/actions/getTeamAction\";\nimport { asyncHelper } from \"../helpers/asyncHelper\";\nimport dynamicSquadAction from \"../redux-setup/actions/dynamicSquadAction\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nfunction MatchComponent(props) {\n  const [message, setMessage] = useState(\"\");\n  const track = useRef({});\n  const dynamicSquads = useSelector((state) => state.dynamicSquads);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const url =\n      \"https://raw.githubusercontent.com/Ad1tyaV/pyTestFiles/master/cric-v1.json\";\n    let data;\n    if (dynamicSquads) {\n      data = asyncHelper(url);\n      data.then((response) => {\n        if (response[0] !== 200) {\n          props.teamsDispatch(\"GET_TEAM\", response[1]);\n        } else {\n          props.teamsDispatch(\"SET_TEAM\", response[1]);\n        }\n      });\n\n      dispatch(dynamicSquadAction(\"DISABLE\"));\n    }\n  }, []);\n\n  useEffect(() => {\n    const maxBalls = props.scoreData.overs * 6;\n    \n    if (!props.scoreData.gameover) {\n      if (\n        props.scoreData.team1Wickets === 10 ||\n        props.scoreData.team1BallsFaced === maxBalls\n      ) {\n        if (Object.keys(track.current).length === 0) {\n          track.current = {};\n          track.current = {\n            ...track.current,\n            team1: {\n              ...track.current.team1,\n              player_1: props.scoreData.onStrike.batterIndex,\n              player_2: props.scoreData.offStrike.batterIndex,\n            },\n          };\n        }\n        props.completeInningsDispatch(\"team1\");\n      }\n    }\n    if (\n      props.scoreData.team1Wickets === 10 ||\n      props.scoreData.team1BallsFaced === maxBalls\n    ) {\n      if (props.scoreData.team2Total > props.scoreData.team1Total) {\n        track.current = {\n          ...track.current,\n          team2: {\n            ...track.current.team1,\n            player_1: props.scoreData.onStrike.batterIndex,\n            player_2: props.scoreData.offStrike.batterIndex,\n          },\n        };\n        setMessage(\n          `${props.scoreData.team2} won by ${\n            10 - props.scoreData.team2Wickets\n          } wickets`\n        );\n      } else if (\n        props.scoreData.team2Total === props.scoreData.team1Total &&\n        (props.scoreData.team2Wickets === 10 ||\n          props.scoreData.team2BallsFaced === maxBalls)\n      ) {\n        track.current = {\n          ...track.current,\n          team2: {\n            ...track.current.team1,\n            player_1: props.scoreData.onStrike.batterIndex,\n            player_2: props.scoreData.offStrike.batterIndex,\n          },\n        };\n        setMessage(`Match Tied`);\n      } else if (\n        props.scoreData.team2Total < props.scoreData.team1Total &&\n        (props.scoreData.team2Wickets === 10 ||\n          props.scoreData.team2BallsFaced === maxBalls)\n      ) {\n        track.current = {\n          ...track.current,\n          team2: {\n            ...track.current.team1,\n            player_1: props.scoreData.onStrike.batterIndex,\n            player_2: props.scoreData.offStrike.batterIndex,\n          },\n        };\n        setMessage(\n          `${props.scoreData.team1} beat ${props.scoreData.team2} by ${\n            props.scoreData.team1Total - props.scoreData.team2Total\n          } runs`\n        );\n      }\n    }\n  }, [props.scoreData]);\n\n  return (\n    <div style={{ color: \"whitesmoke\" }}>\n      {\n        <>\n          <span\n            className=\"score_data\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <h3>{props.scoreData.team1}</h3>&nbsp;&nbsp;\n            <h3>\n              {props.scoreData.team1Total}/{props.scoreData.team1Wickets} Overs:\n              {Math.floor(props.scoreData.team1BallsFaced / 6)}.\n              {props.scoreData.team1BallsFaced % 6} RR:\n              {(\n                props.scoreData.team1Total /\n                ((props.scoreData.team1BallsFaced || 1) / 6)\n              ).toPrecision(3) ?? 0}\n            </h3>\n          </span>\n\n          <span\n            className=\"score_data\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <h3>{props.scoreData.team2}</h3>&nbsp;&nbsp;\n            <h3>\n              {props.scoreData.team2Total}/{props.scoreData.team2Wickets} Overs:\n              {Math.floor(props.scoreData.team2BallsFaced / 6)}.\n              {props.scoreData.team2BallsFaced % 6} RR:\n              {(\n                props.scoreData.team2Total /\n                ((props.scoreData.team2BallsFaced || 1) / 6)\n              ).toPrecision(3) ?? 0}\n            </h3>\n          </span>\n        </>\n      }\n      {<br />}\n      {props.scoreData.currentTeamBatting === props.scoreData.team1 ? (\n        <div>\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team1][\n                props.scoreData.onStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team1Stats[props.scoreData.onStrike.batterIndex] ??\n              0}\n            ({props.scoreData.team1BallsFacedByPlayer?.[props.scoreData.onStrike.batterIndex] ?? 0})\n          </span>\n          <br />\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team1][\n                props.scoreData.offStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team1Stats[\n              props.scoreData.offStrike.batterIndex\n            ] ?? 0}\n            ({props.scoreData.team1BallsFacedByPlayer?.[props.scoreData.offStrike.batterIndex] ?? 0})\n          </span>\n        </div>\n      ) : (\n        <div>\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team2][\n                props.scoreData.onStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team2Stats[props.scoreData.onStrike.batterIndex] ??\n              0}\n            ({props.scoreData.team2BallsFacedByPlayer?.[props.scoreData.onStrike.batterIndex] ?? 0})\n          </span>\n          <br />\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team2][\n                props.scoreData.offStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team2Stats[\n              props.scoreData.offStrike.batterIndex\n            ] ?? 0}\n            ({props.scoreData.team2BallsFacedByPlayer?.[props.scoreData.offStrike.batterIndex] ?? 0})\n          </span>\n        </div>\n      )}\n      {<hr />}\n      {props.scoreData.gameover ? (\n        <>\n          <span\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              fontWeight: \"600\",\n            }}\n          >\n            {message}\n          </span>\n          <br />\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                track.current = {};\n                props.resetDispatch();\n              }}\n            >\n              Play Again\n            </Button>\n          </span>\n        </>\n      ) : (\n        <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              for (let i = 0; i < 6; i++)\n                // props.scoreDispatch(Math.floor(Math.random() * 7));\n                props.scoreDispatch(props.pitchType);\n            }}\n          >\n            PLAY\n          </Button>\n        </span>\n      )}\n\n      {props.scoreData.gameover ? (\n        <ScoreCard\n          track={track.current}\n          team1={props.scoreData.team1}\n          team2={props.scoreData.team2}\n          teamData={props.teamData}\n          team1Stats={props.scoreData.team1Stats}\n          team2Stats={props.scoreData.team2Stats}\n          team1BallsFacedByPlayer={props.scoreData.team1BallsFacedByPlayer}\n          team2BallsFacedByPlayer={props.scoreData.team2BallsFacedByPlayer}\n        />\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  //console.log(state);\n  return {\n    scoreData: state.manageScores,\n    teamData: state.getTeams,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    scoreDispatch: (X) => dispatch(scoreX(null, X)),\n    completeInningsDispatch: (team) => dispatch(completeInnings(team)),\n    resetDispatch: () => dispatch(resetState()),\n    teamsDispatch: (type, data) => dispatch(getTeamAction(type, data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchComponent);\n","import React, { useState, useRef } from \"react\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { connect } from \"react-redux\";\nimport pickTeams from \"../redux-setup/actions/pickTeams\";\nimport { Button } from \"@material-ui/core\";\nimport { SwapVert } from \"@material-ui/icons\";\nimport MatchComponent from \"./MatchComponent\";\n\nfunction PickTeams(props) {\n  const [openTeam1, setOpenTeam1] = useState(false);\n  const [openTeam2, setOpenTeam2] = useState(false);\n  const [pitchToggle, setpitchToggle] = useState(false);\n  const [firstTeam, setFirstTeam] = useState(\"India\");\n  const [secondTeam, setSecondTeam] = useState(\"NewZealand\");\n  const pitchTypes = [\"Normal\", \"Hard\", \"Wet\", \"Green\"];\n  const [selectedPitch, setSelectedPitch] = useState(\"Normal\");\n  const [selectedOvers, setSelectedOvers] = useState(50);\n  const [oversToggle, setOversToggle] = useState(false);\n  const oversOptions = [\n    { value: 20, label: \"T20 (20 Overs)\", format: \"T20\" },\n    { value: 40, label: \"ODI (40 Overs)\", format: \"ODI_40\" },\n    { value: 50, label: \"ODI (50 Overs)\", format: \"ODI_50\" }\n  ];\n  const teams = useRef([\n    \"India\",\n    \"Pakistan\",\n    \"Australia\",\n    \"England\",\n    \"SouthAfrica\",\n    \"NewZealand\",\n    \"WestIndies\",\n    \"SriLanka\"\n  ]);\n  const handleChangeFirstTeam = (event) => {\n    setFirstTeam(event.target.value);\n  };\n\n  const handleChangeSecondTeam = (event) => {\n    setSecondTeam(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpenTeam1(false);\n  };\n\n  const handleOpen = () => {\n    setOpenTeam1(true);\n  };\n\n  const handleClose2 = () => {\n    setOpenTeam2(false);\n  };\n\n  const handleOpen2 = () => {\n    setOpenTeam2(true);\n  };\n\n  return (\n    <div>\n      {props.scoreData.team1 === \"\" ? (\n        <>\n          <div style={{ marginLeft: \"47.5%\", marginTop: \"1%\" }}>\n            <InputLabel shrink id=\"firstTeam\" style={{ color: \"whitesmoke\" }}>\n              First Team\n            </InputLabel>\n            <Select\n              label=\"First Team\"\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"firstTeam\"\n              open={openTeam1}\n              onClose={handleClose}\n              onOpen={handleOpen}\n              value={firstTeam}\n              onChange={handleChangeFirstTeam}\n              style={{ color: \"whitesmoke\" }}\n              key={firstTeam}\n            >\n              {teams.current.map((team) =>\n                team !== secondTeam ? (\n                  <MenuItem value={team} key={team}>\n                    {team}\n                  </MenuItem>\n                ) : (\n                  []\n                )\n              )}\n            </Select>\n            <br />\n            <br />\n            <span style={{ color: \"white\", fontSize: \"0.70rem\" }}>Switch</span>\n            <SwapVert\n              htmlColor=\"white\"\n              onClick={() => {\n                setFirstTeam(secondTeam);\n                setSecondTeam(firstTeam);\n              }}\n            />\n            <br />\n            <br />\n            <InputLabel shrink id=\"secondTeam\" style={{ color: \"whitesmoke\" }}>\n              Second Team\n            </InputLabel>\n            <Select\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"secondTeam\"\n              open={openTeam2}\n              onClose={handleClose2}\n              onOpen={handleOpen2}\n              value={secondTeam}\n              onChange={handleChangeSecondTeam}\n              style={{ color: \"whitesmoke\" }}\n              key={secondTeam}\n            >\n              {teams.current.map((team) =>\n                team !== firstTeam ? (\n                  <MenuItem value={team} key={team}>\n                    {team}\n                  </MenuItem>\n                ) : (\n                  []\n                )\n              )}\n            </Select>\n            <br />\n            <br />\n            <InputLabel shrink id=\"pitchType\" style={{ color: \"whitesmoke\" }}>\n              Pitch Type\n            </InputLabel>\n            <Select\n              label=\"Pitch Type\"\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"pitchType\"\n              open={pitchToggle}\n              onClose={() => {\n                setpitchToggle(false);\n              }}\n              onOpen={() => {\n                setpitchToggle(true);\n              }}\n              value={selectedPitch}\n              onChange={(event) => {\n                setSelectedPitch(event.target.value);\n              }}\n              style={{ color: \"whitesmoke\" }}\n              key={selectedPitch}\n            >\n              {pitchTypes.map((pitch) => (\n                <MenuItem value={pitch} key={pitch}>\n                  {pitch}\n                </MenuItem>\n              ))}\n            </Select>\n            <br />\n            <br />\n            <InputLabel shrink id=\"oversType\" style={{ color: \"whitesmoke\" }}>\n              Overs\n            </InputLabel>\n            <Select\n              label=\"Overs\"\n              labelId=\"demo-controlled-open-select-label\"\n              id=\"oversType\"\n              open={oversToggle}\n              onClose={() => {\n                setOversToggle(false);\n              }}\n              onOpen={() => {\n                setOversToggle(true);\n              }}\n              value={selectedOvers}\n              onChange={(event) => {\n                setSelectedOvers(event.target.value);\n              }}\n              style={{ color: \"whitesmoke\" }}\n              key={selectedOvers}\n            >\n              {oversOptions.map((option) => (\n                <MenuItem value={option.value} key={option.value}>\n                  {option.label}\n                </MenuItem>\n              ))}\n            </Select>\n            <br />\n            <br />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                const selectedFormat = oversOptions.find(opt => opt.value === selectedOvers)?.format || \"ODI_50\";\n                props.pickTeamDispatch(firstTeam, secondTeam, selectedOvers, selectedFormat);\n              }}\n            >\n              PLAY\n            </Button>\n          </div>\n        </>\n      ) : (\n        <MatchComponent pitchType={selectedPitch} />\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    scoreData: state.manageScores,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    pickTeamDispatch: (team1, team2, overs, format) => dispatch(pickTeams(team1, team2, overs, format)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PickTeams);\n","// Realistic cricket scoring system that adapts to different formats\nconst OUTCOMES = [-1, 0, 1, 2, 3, 4, 6]; // Possible cricket outcomes\n\n// Realistic base frequencies for different formats\n// These are calibrated to produce realistic run rates\nconst FORMAT_BASE_FREQUENCIES = {\n    T20: {\n        // T20: Target ~8-9 runs per over (realistic T20 average)\n        AGGRESSIVE: [5, 45, 30, 15, 2, 18, 12],    // ~9.2 RPO\n        ANCHOR: [4, 55, 40, 18, 3, 15, 8],         // ~7.8 RPO  \n        POWER_HITTER: [8, 40, 20, 10, 1, 20, 18], // ~10.5 RPO\n        ACCUMULATOR: [3, 50, 50, 20, 4, 12, 6],   // ~7.5 RPO\n        ALL_ROUNDER: [5, 50, 35, 15, 2, 16, 10],  // ~8.5 RPO\n        TAIL_ENDER: [15, 70, 25, 8, 1, 8, 3]      // ~5.2 RPO\n    },\n    ODI_50: {\n        // ODI: Target ~5-6 runs per over (realistic ODI average)\n        AGGRESSIVE: [4, 65, 40, 18, 3, 15, 8],     // ~6.2 RPO\n        ANCHOR: [3, 75, 50, 20, 4, 12, 4],         // ~5.4 RPO\n        POWER_HITTER: [6, 60, 25, 12, 2, 18, 12], // ~7.8 RPO\n        ACCUMULATOR: [2, 70, 60, 25, 5, 10, 3],   // ~5.8 RPO\n        ALL_ROUNDER: [4, 70, 45, 18, 3, 13, 6],   // ~6.0 RPO\n        TAIL_ENDER: [12, 85, 30, 10, 2, 6, 2]     // ~3.8 RPO\n    },\n    ODI_40: {\n        // 40-over: Target ~6-7 runs per over\n        AGGRESSIVE: [4, 60, 38, 16, 3, 16, 9],     // ~6.8 RPO\n        ANCHOR: [3, 70, 48, 19, 4, 13, 5],         // ~5.9 RPO\n        POWER_HITTER: [6, 55, 23, 11, 2, 19, 14], // ~8.5 RPO\n        ACCUMULATOR: [2, 65, 55, 23, 5, 11, 4],   // ~6.2 RPO\n        ALL_ROUNDER: [4, 65, 42, 17, 3, 14, 7],   // ~6.5 RPO\n        TAIL_ENDER: [12, 80, 28, 9, 2, 7, 3]      // ~4.2 RPO\n    }\n};\n\n// Format-specific modifiers\nconst FORMAT_MODIFIERS = {\n    T20: {\n        name: \"T20\",\n        totalOvers: 20,\n        aggressionMultiplier: 1.5, // More aggressive\n        boundaryBoost: 1.4, // More 4s and 6s\n        dotPenalty: 0.7, // Fewer dot balls\n        wicketRisk: 1.3 // Higher risk of getting out\n    },\n    ODI_50: {\n        name: \"50 Over ODI\",\n        totalOvers: 50,\n        aggressionMultiplier: 1.0, // Balanced\n        boundaryBoost: 1.0,\n        dotPenalty: 1.0,\n        wicketRisk: 1.0\n    },\n    ODI_40: {\n        name: \"40 Over ODI\",\n        totalOvers: 40,\n        aggressionMultiplier: 1.2, // Slightly more aggressive\n        boundaryBoost: 1.15,\n        dotPenalty: 0.85,\n        wicketRisk: 1.1\n    },\n    TEST: {\n        name: \"Test Match\",\n        totalOvers: 90, // Typical day's play\n        aggressionMultiplier: 0.6, // Very conservative\n        boundaryBoost: 0.7,\n        dotPenalty: 1.4, // More dot balls acceptable\n        wicketRisk: 0.7 // Lower risk tolerance\n    }\n};\n\n// Pitch condition modifiers (same as before but more structured)\nconst PITCH_MODIFIERS = {\n    NORMAL: { wicket: 0, dot: 0, single: 0, two: 0, three: 0, four: 0, six: 0 },\n    GREEN: { wicket: 3, dot: 8, single: 5, two: 2, three: 0, four: -2, six: -3 },\n    HARD: { wicket: -2, dot: -6, single: -2, two: 1, three: 0, four: 4, six: 5 },\n    WET: { wicket: 2, dot: 10, single: 6, two: 3, three: 1, four: -3, six: -8 },\n    DUSTY: { wicket: 1, dot: 5, single: 3, two: 1, three: 0, four: -1, six: -2 }\n};\n\n// Game situation modifiers\nconst getSituationModifier = (ballsFaced, totalBalls, currentScore, targetScore = null, wicketsLost) => {\n    const oversRemaining = (totalBalls - ballsFaced) / 6;\n    const wicketsInHand = 10 - wicketsLost;\n\n    let aggressionFactor = 1.0;\n    let riskFactor = 1.0;\n\n    // Death overs (last 10% of innings)\n    if (ballsFaced > totalBalls * 0.9) {\n        aggressionFactor = 1.8;\n        riskFactor = 1.4;\n    }\n    // Middle overs (40-80% of innings)  \n    else if (ballsFaced > totalBalls * 0.4 && ballsFaced < totalBalls * 0.8) {\n        aggressionFactor = 0.8;\n        riskFactor = 0.8;\n    }\n    // Powerplay (first 20% of innings)\n    else if (ballsFaced < totalBalls * 0.2) {\n        aggressionFactor = 1.3;\n        riskFactor = 1.1;\n    }\n\n    // Chasing scenario\n    if (targetScore) {\n        const requiredRate = (targetScore - currentScore) / oversRemaining;\n        const currentRate = currentScore / (ballsFaced / 6);\n\n        if (requiredRate > currentRate * 1.5) {\n            aggressionFactor *= 2.0; // Desperate situation\n            riskFactor *= 1.8;\n        } else if (requiredRate > currentRate * 1.2) {\n            aggressionFactor *= 1.4; // Need to accelerate\n            riskFactor *= 1.2;\n        }\n    }\n\n    // Wickets in hand factor\n    if (wicketsInHand <= 3) {\n        riskFactor *= 0.6; // Play safe with few wickets\n        aggressionFactor *= 0.7;\n    } else if (wicketsInHand >= 7) {\n        riskFactor *= 1.2; // Can afford risks\n        aggressionFactor *= 1.1;\n    }\n\n    return { aggressionFactor, riskFactor };\n};\n\n// Simplified realistic function - no complex multipliers\nconst getImprovedRandomOutcome = (\n    playerArchetype,\n    format,\n    pitchType = 'NORMAL',\n    gameState = {}\n) => {\n    // Get the realistic base frequency for this format and player type\n    const formatFreqs = FORMAT_BASE_FREQUENCIES[format] || FORMAT_BASE_FREQUENCIES.ODI_50;\n    const baseFreq = formatFreqs[playerArchetype] || formatFreqs.ALL_ROUNDER;\n\n    // Start with the realistic base frequency\n    let frequency = [...baseFreq];\n\n    // Apply only pitch modifiers (small adjustments)\n    const pitchMod = PITCH_MODIFIERS[pitchType] || PITCH_MODIFIERS.NORMAL;\n    frequency[0] += pitchMod.wicket;\n    frequency[1] += pitchMod.dot;\n    frequency[2] += pitchMod.single;\n    frequency[3] += pitchMod.two;\n    frequency[4] += pitchMod.three;\n    frequency[5] += pitchMod.four;\n    frequency[6] += pitchMod.six;\n\n    // Ensure no negative frequencies\n    frequency = frequency.map(f => Math.max(0, Math.round(f)));\n\n    // Create cumulative sum for weighted selection\n    const cumulativeSum = ((sum) => (value) => (sum += value))(0);\n    const prefixSum = frequency.map(cumulativeSum);\n    const totalWeight = prefixSum[prefixSum.length - 1];\n\n    if (totalWeight === 0) return 1; // Fallback\n\n    // Generate random outcome\n    const random = Math.floor(Math.random() * totalWeight);\n\n    // Find which outcome was selected\n    for (let i = 0; i < prefixSum.length; i++) {\n        if (random < prefixSum[i]) {\n            return OUTCOMES[i];\n        }\n    }\n\n    return OUTCOMES[OUTCOMES.length - 1]; // Fallback to six\n};\n\n// Helper function to assign player archetypes based on batting position\nconst getPlayerArchetypeByPosition = (batterIndex, format) => {\n    // Different batting orders for different formats\n    const archetypesByPosition = {\n        T20: ['AGGRESSIVE', 'AGGRESSIVE', 'ANCHOR', 'POWER_HITTER', 'ALL_ROUNDER', 'POWER_HITTER', 'ALL_ROUNDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER'],\n        ODI_50: ['ANCHOR', 'AGGRESSIVE', 'ANCHOR', 'ACCUMULATOR', 'ALL_ROUNDER', 'AGGRESSIVE', 'ALL_ROUNDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER'],\n        ODI_40: ['AGGRESSIVE', 'ANCHOR', 'ANCHOR', 'ALL_ROUNDER', 'AGGRESSIVE', 'POWER_HITTER', 'ALL_ROUNDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER'],\n        TEST: ['ANCHOR', 'ANCHOR', 'ACCUMULATOR', 'ANCHOR', 'ALL_ROUNDER', 'ALL_ROUNDER', 'ALL_ROUNDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER', 'TAIL_ENDER']\n    };\n\n    const positions = archetypesByPosition[format] || archetypesByPosition.ODI_50;\n    return positions[Math.min(batterIndex + 1, positions.length - 1)] || 'ALL_ROUNDER';\n};\n\n// Export the main function with backward compatibility\nconst RandomWithIndex = (batterIndex, pitchType = 'Normal', format = 'ODI_50', gameState = {}) => {\n    const playerArchetype = getPlayerArchetypeByPosition(batterIndex, format);\n\n    // Map pitch types from game format to system format\n    const pitchTypeMap = {\n        'Normal': 'NORMAL',\n        'Green': 'GREEN',\n        'Hard': 'HARD',\n        'Wet': 'WET'\n    };\n\n    const mappedPitchType = pitchTypeMap[pitchType] || 'NORMAL';\n    return getImprovedRandomOutcome(playerArchetype, format, mappedPitchType, gameState);\n};\n\nexport default RandomWithIndex;\n// Create PLAYER_ARCHETYPES for backward compatibility with demo\nconst PLAYER_ARCHETYPES = {\n    AGGRESSIVE: { name: \"Aggressive\", description: \"High strike rate, takes risks\" },\n    ANCHOR: { name: \"Anchor\", description: \"Builds innings, rotates strike\" },\n    POWER_HITTER: { name: \"Power Hitter\", description: \"Big hitting, high risk\" },\n    ACCUMULATOR: { name: \"Accumulator\", description: \"Consistent run scoring\" },\n    ALL_ROUNDER: { name: \"All Rounder\", description: \"Versatile batting style\" },\n    TAIL_ENDER: { name: \"Tail Ender\", description: \"Lower order batsman\" }\n};\n\nexport {\n    getImprovedRandomOutcome,\n    PLAYER_ARCHETYPES,\n    FORMAT_MODIFIERS,\n    PITCH_MODIFIERS,\n    getPlayerArchetypeByPosition,\n    FORMAT_BASE_FREQUENCIES\n};","import RandomWithIndex from \"../../helpers/improvedRandomNumber\";\n\nconst initialState = {\n  team1: \"\",\n  team2: \"\",\n  currentTeamBatting: \"\",\n  onStrike: { batterIndex: -1 },\n  offStrike: { batterIndex: 0 },\n  team1Stats: {},\n  team2Stats: {},\n  team1BallsFacedByPlayer: {},\n  team2BallsFacedByPlayer: {},\n  innings: 0,\n  team1Total: 0,\n  team2Total: 0,\n  team1Wickets: 0,\n  team2Wickets: 0,\n  gameover: false,\n  team1BallsFaced: 0,\n  team2BallsFaced: 0,\n  overs: 50,\n  format: \"ODI_50\",\n};\n\nconst scoreRunsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SCORE\": {\n      let pitchType = action.payload.pitchType;\n      if (state.gameover) return state;\n      // Create game state for improved random number generation\n      const gameState = {\n        ballsFaced: state.currentTeamBatting === state.team1 ? state.team1BallsFaced : state.team2BallsFaced,\n        currentScore: state.currentTeamBatting === state.team1 ? state.team1Total : state.team2Total,\n        targetScore: state.currentTeamBatting === state.team2 ? state.team1Total + 1 : null,\n        wicketsLost: state.currentTeamBatting === state.team1 ? state.team1Wickets : state.team2Wickets,\n        batterIndex: state.onStrike.batterIndex\n      };\n      \n      let updatedRun = RandomWithIndex(state.onStrike.batterIndex, pitchType, state.format, gameState);\n      //console.log(updatedRun);\n      //console.log(\"Updated Run:\"+updatedRun)\n      // console.log(state.onStrike.batterIndex, state.offStrike.batterIndex, updatedRun)\n      if (updatedRun === -1) {\n        if (\n          state.currentTeamBatting === state.team1 &&\n          state.team1Wickets !== 10\n        ) {\n          //console.log(state.onStrike.batterIndex)\n          //console.log('wicket')\n          let newstate = {\n            ...state,\n            offStrike: {\n              ...state.offStrike,\n              batterIndex: state.offStrike.batterIndex,\n            },\n            onStrike: {\n              ...state.onStrike,\n              batterIndex:\n                state.onStrike.batterIndex > state.offStrike.batterIndex\n                  ? state.onStrike.batterIndex + 1\n                  : state.offStrike.batterIndex + 1,\n            },\n            team1Wickets:\n              state.onStrike.batterIndex > state.offStrike.batterIndex\n                ? state.onStrike.batterIndex + 1\n                : state.offStrike.batterIndex + 1,\n            team1BallsFaced: state.team1BallsFaced + 1,\n            team1BallsFacedByPlayer: {\n              ...state.team1BallsFacedByPlayer,\n              [state.onStrike.batterIndex]: (state.team1BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n            }\n          };\n          return newstate.team1BallsFaced % 6 === 0\n            ? {\n                ...newstate,\n                onStrike: {\n                  ...newstate.onStrike,\n                  batterIndex: newstate.offStrike.batterIndex,\n                },\n                offStrike: {\n                  ...newstate.offStrike,\n                  batterIndex: newstate.onStrike.batterIndex,\n                },\n              }\n            : newstate;\n        } else if (\n          state.currentTeamBatting === state.team2 &&\n          state.team2Wickets !== 10\n        ) {\n          let newstate = {\n            ...state,\n            offStrike: {\n              ...state.offStrike,\n              batterIndex: state.offStrike.batterIndex,\n            },\n            onStrike: {\n              ...state.onStrike,\n              batterIndex:\n                state.onStrike.batterIndex > state.offStrike.batterIndex\n                  ? state.onStrike.batterIndex + 1\n                  : state.offStrike.batterIndex + 1,\n            },\n            team2Wickets:\n              state.onStrike.batterIndex > state.offStrike.batterIndex\n                ? state.onStrike.batterIndex + 1\n                : state.offStrike.batterIndex + 1,\n            team2BallsFaced: state.team2BallsFaced + 1,\n            team2BallsFacedByPlayer: {\n              ...state.team2BallsFacedByPlayer,\n              [state.onStrike.batterIndex]: (state.team2BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n            }\n          };\n          return newstate.team2BallsFaced % 6 === 0\n            ? {\n                ...newstate,\n                onStrike: {\n                  ...newstate.onStrike,\n                  batterIndex: newstate.offStrike.batterIndex,\n                },\n                offStrike: {\n                  ...newstate.offStrike,\n                  batterIndex: newstate.onStrike.batterIndex,\n                },\n              }\n            : newstate;\n        } else return state;\n      } else {\n        if (updatedRun === 0) {\n          if (state.currentTeamBatting === state.team1) {\n            let newstate = {\n              ...state,\n              team1BallsFaced: state.team1BallsFaced + 1,\n              team1BallsFacedByPlayer: {\n                ...state.team1BallsFacedByPlayer,\n                [state.onStrike.batterIndex]: (state.team1BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n              }\n            };\n            return newstate.team1BallsFaced % 6 === 0\n              ? {\n                  ...newstate,\n                  onStrike: {\n                    ...newstate.onStrike,\n                    batterIndex: newstate.offStrike.batterIndex,\n                  },\n                  offStrike: {\n                    ...newstate.offStrike,\n                    batterIndex: newstate.onStrike.batterIndex,\n                  },\n                }\n              : newstate;\n          } else {\n            let newstate = {\n              ...state,\n              team2BallsFaced: state.team2BallsFaced + 1,\n              team2BallsFacedByPlayer: {\n                ...state.team2BallsFacedByPlayer,\n                [state.onStrike.batterIndex]: (state.team2BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n              }\n            };\n            return newstate.team1BallsFaced % 6 === 0\n              ? {\n                  ...newstate,\n                  onStrike: {\n                    ...newstate.onStrike,\n                    batterIndex: newstate.offStrike.batterIndex,\n                  },\n                  offStrike: {\n                    ...newstate.offStrike,\n                    batterIndex: newstate.onStrike.batterIndex,\n                  },\n                }\n              : newstate;\n          }\n        } else if (updatedRun % 2) {\n          if (\n            state.currentTeamBatting === state.team1 &&\n            state.team1Wickets !== 10\n          ) {\n            let newstate = {\n              ...state,\n              team1Total: state.team1Total + updatedRun,\n              team1Stats: {\n                ...state.team1Stats,\n                [state.onStrike.batterIndex]:\n                  (state.team1Stats[state.onStrike.batterIndex] ?? 0) +\n                  updatedRun,\n              },\n              team1BallsFaced: state.team1BallsFaced + 1,\n              team1BallsFacedByPlayer: {\n                ...state.team1BallsFacedByPlayer,\n                [state.onStrike.batterIndex]: (state.team1BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n              },\n              onStrike: {\n                ...state.onStrike,\n                batterIndex: state.offStrike.batterIndex,\n              },\n              offStrike: {\n                ...state.offStrike,\n                batterIndex: state.onStrike.batterIndex,\n              },\n            };\n            return newstate.team1BallsFaced % 6 === 0\n              ? {\n                  ...newstate,\n                  onStrike: {\n                    ...newstate.onStrike,\n                    batterIndex: newstate.offStrike.batterIndex,\n                  },\n                  offStrike: {\n                    ...newstate.offStrike,\n                    batterIndex: newstate.onStrike.batterIndex,\n                  },\n                }\n              : newstate;\n          } else if (\n            state.currentTeamBatting === state.team2 &&\n            state.team2Wickets !== 10 &&\n            state.team2Total <= state.team1Total\n          ) {\n            let newstate = {\n              ...state,\n              team2Total: state.team2Total + updatedRun,\n              team2Stats: {\n                ...state.team2Stats,\n                [state.onStrike.batterIndex]:\n                  (state.team2Stats[state.onStrike.batterIndex] ?? 0) +\n                  updatedRun,\n              },\n              team2BallsFaced: state.team2BallsFaced + 1,\n              team2BallsFacedByPlayer: {\n                ...state.team2BallsFacedByPlayer,\n                [state.onStrike.batterIndex]: (state.team2BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n              },\n              onStrike: {\n                ...state.onStrike,\n                batterIndex: state.offStrike.batterIndex,\n              },\n              offStrike: {\n                ...state.offStrike,\n                batterIndex: state.onStrike.batterIndex,\n              },\n            };\n            return newstate.team2BallsFaced % 6 === 0\n              ? {\n                  ...newstate,\n                  onStrike: {\n                    ...newstate.onStrike,\n                    batterIndex: newstate.offStrike.batterIndex,\n                  },\n                  offStrike: {\n                    ...newstate.offStrike,\n                    batterIndex: newstate.onStrike.batterIndex,\n                  },\n                }\n              : newstate;\n          } else return state;\n        } else {\n          if (\n            state.currentTeamBatting === state.team1 &&\n            state.team1Wickets !== 10\n          ) {\n            let newstate = {\n              ...state,\n              team1Total: state.team1Total + updatedRun,\n              team1Stats: {\n                ...state.team1Stats,\n                [state.onStrike.batterIndex]:\n                  (state.team1Stats[state.onStrike.batterIndex] ?? 0) +\n                  updatedRun,\n              },\n              team1BallsFaced: state.team1BallsFaced + 1,\n              team1BallsFacedByPlayer: {\n                ...state.team1BallsFacedByPlayer,\n                [state.onStrike.batterIndex]: (state.team1BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n              },\n            };\n            return newstate.team1BallsFaced % 6 === 0\n              ? {\n                  ...newstate,\n                  onStrike: {\n                    ...newstate.onStrike,\n                    batterIndex: newstate.offStrike.batterIndex,\n                  },\n                  offStrike: {\n                    ...newstate.offStrike,\n                    batterIndex: newstate.onStrike.batterIndex,\n                  },\n                }\n              : newstate;\n          } else if (\n            state.currentTeamBatting === state.team2 &&\n            state.team2Wickets !== 10 &&\n            state.team2Total <= state.team1Total\n          ) {\n            let newstate = {\n              ...state,\n              team2Total: state.team2Total + updatedRun,\n              team2Stats: {\n                ...state.team2Stats,\n                [state.onStrike.batterIndex]:\n                  (state.team2Stats[state.onStrike.batterIndex] ?? 0) +\n                  updatedRun,\n              },\n              team2BallsFaced: state.team2BallsFaced + 1,\n              team2BallsFacedByPlayer: {\n                ...state.team2BallsFacedByPlayer,\n                [state.onStrike.batterIndex]: (state.team2BallsFacedByPlayer[state.onStrike.batterIndex] || 0) + 1\n              },\n            };\n            return newstate.team2BallsFaced % 6 === 0\n              ? {\n                  ...newstate,\n                  onStrike: {\n                    ...newstate.onStrike,\n                    batterIndex: newstate.offStrike.batterIndex,\n                  },\n                  offStrike: {\n                    ...newstate.offStrike,\n                    batterIndex: newstate.onStrike.batterIndex,\n                  },\n                }\n              : newstate;\n          } else return state;\n        }\n      }\n    }\n    case \"COMPLETE\": {\n      if (state.currentTeamBatting === state.team1) {\n        return {\n          ...state,\n          currentTeamBatting: state.team2,\n          onStrike: { batterIndex: -1 },\n          offStrike: { batterIndex: 0 },\n        };\n      } else if (\n        state.currentTeamBatting === state.team2 &&\n        (state.team2Wickets === 10 || state.team2BallsFaced === state.overs * 6)\n      ) {\n        return {\n          ...state,\n          gameover: true,\n        };\n      } else if (\n        state.currentTeamBatting === state.team2 &&\n        state.team2Total > state.team1Total\n      ) {\n        return {\n          ...state,\n          gameover: true,\n        };\n      } else return state;\n    }\n    case \"RESET_STATE\":\n      return {\n        team1: \"\",\n        team2: \"\",\n        currentTeamBatting: \"\",\n        onStrike: { batterIndex: -1 },\n        offStrike: { batterIndex: 0 },\n        team1Stats: {},\n        team2Stats: {},\n        team1BallsFacedByPlayer: {},\n        team2BallsFacedByPlayer: {},\n        innings: 0,\n        team1Total: 0,\n        team2Total: 0,\n        team1Wickets: 0,\n        team2Wickets: 0,\n        gameover: false,\n        team1BallsFaced: 0,\n        team2BallsFaced: 0,\n        overs: 50,\n        format: \"ODI_50\"\n      };\n    case \"PICK_TEAMS\":\n      return {\n        ...state,\n        team1: action.payload.team1,\n        team2: action.payload.team2,\n        overs: action.payload.overs || 50,\n        format: action.payload.format || \"ODI_50\",\n        gameover: false,\n        currentTeamBatting: action.payload.team1,\n        team1BallsFaced: 0,\n        team2BallsFaced: 0,\n        team1BallsFacedByPlayer: {},\n        team2BallsFacedByPlayer: {},\n        team1Stats: {},\n        team2Stats: {},\n        team1Total: 0,\n        team2Total: 0,\n        team1Wickets: 0,\n        team2Wickets: 0,\n        innings: 0,\n        onStrike: { batterIndex: -1 },\n        offStrike: { batterIndex: 0 }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default scoreRunsReducer;\n","const initialState = {};\nconst initPickTeams = (state = initialState, action) => {\n  //console.log(action);\n  switch (action.type) {\n    case \"PICK_TEAMS\": {\n      return {\n        ...initialState,\n        team1: action.payload.team1Name,\n        team2: action.payload.team2Name,\n        team1Stats: action.payload.team1Squad,\n        team2Stats: action.payload.team2Squad,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default initPickTeams;\n","const initialState = {};\nconst setFirstTeams = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_FIRST\": {\n      if (state.team1 !== action.payload.TEAM1)\n        return {\n          ...initialState,\n          team1: state.team2,\n          team2: state.team1,\n          currentTeamBatting: state.team2,\n          team1Stats: state.team2Stats,\n          team2Stats: state.team1Stats,\n          innings: 1,\n        };\n      else return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default setFirstTeams;\n","const initialState = {\n  India: {\n    \"-1\": \"Rohit Sharma\",\n    0: \"Ishan Kishan\",\n    1: \"Virat Kohli\",\n    2: \"SuryaKumar Yadav\",\n    3: \"Rishabh Pant\",\n    4: \"KL Rahul\",\n    5: \"Hardik Pandya\",\n    6: \"Ravindra Jadeja\",\n    7: \"Shardul Thakur\",\n    8: \"Mohammed Shami\",\n    9: \"Jasprit Bumrah\",\n    10: \"Yuzi Chahal\",\n  },\n  Pakistan: {\n    \"-1\": \"Imad Wasim\",\n    0: \"Fakhar Zaman\",\n    1: \"Babar Azam\",\n    2: \"Haider Ali\",\n    3: \"Mohammed Rizwan\",\n    4: \"Iftikhar Ahmed\",\n    5: \"Khushdil Shah\",\n    6: \"Shadab Khan\",\n    7: \"Shaheen Afrid\",\n    8: \"Musa Khan\",\n    9: \"Muhammad Hasnain\",\n    10: \"Yasir Shah\",\n  },\n  Australia: {\n    \"-1\": \"Travis Head\",\n    0: \"David Warner\",\n    1: \"Steve Smith\",\n    2: \"Marnus Labuschagne\",\n    3: \"Marcus Stoinis\",\n    4: \"Glenn Maxwell\",\n    5: \"Matthew Wade\",\n    6: \"Pat Cummins\",\n    7: \"Mitchell Starc\",\n    8: \"Adam Zampa\",\n    9: \"Josh Hazelwood\",\n    10: \"Daniel Sams\",\n  },\n  England: {\n    \"-1\": \"Jason Roy\",\n    0: \"Jonny Bairstow\",\n    1: \"Joe Root\",\n    2: \"Liam Livingstone\",\n    3: \"Moeen Ali\",\n    4: \"Jos Buttler\",\n    5: \"Chris Woakes\",\n    6: \"Liam Plunkett\",\n    7: \"Jofra Archer\",\n    8: \"Adil Rashid\",\n    9: \"Mark Wood\",\n    10: \"Sam Curran\",\n  },\n  SouthAfrica: {\n    \"-1\": \"Quinton De Kock\",\n    0: \"Aiden Markram\",\n    1: \"Temba Bavuma\",\n    2: \"R Van Der Dussen\",\n    3: \"David Miller\",\n    4: \"Heinrich Klaasen\",\n    5: \"Andile Phehlukwayo\",\n    6: \"Kagiso Rabada\",\n    7: \"Anrich Nortje\",\n    8: \"Lungi Ngidi\",\n    9: \"Keshav Maharaj\",\n    10: \"Tabraiz Shamsi\",\n  },\n  NewZealand: {\n    \"-1\": \"Martin Guptill\",\n    0: \"Devon Conway\",\n    1: \"Kane Williamson\",\n    2: \"Daryl Mitchel\",\n    3: \"Tom Latham\",\n    4: \"James Neesham\",\n    5: \"Colin de Grandhomme\",\n    6: \"Mitchell Santner\",\n    7: \"Matt Henry\",\n    8: \"Trent Boult\",\n    9: \"Lockie Ferguson\",\n    10: \"Tim Southee\",\n  },\n  WestIndies: {\n    \"-1\": \"Evin Lewis\",\n    0: \"Shai Hope\",\n    1: \"Darren Bravo\",\n    2: \"Nicholas Pooran\",\n    3: \"Rovman Powell\",\n    4: \"Andre Russell\",\n    5: \"Jason Holder\",\n    6: \"Alzarri Joseph\",\n    7: \"Sunil Narine\",\n    8: \"Sheldon Cotrell\",\n    9: \"Hayden Walsh Jr\",\n    10: \"Akeal Hosein\",\n  },\n  SriLanka: {\n    \"-1\": \"Pathum Nissanka\",\n    0: \"Kusal Mendis\",\n    1: \"Charith Asalanka\",\n    2: \"Danushka Gunathilaka\",\n    3: \"Bhanuka Rajapaksa\",\n    4: \"Dasun Shanaka\",\n    5: \"Wanindu Hasaranga\",\n    6: \"Chamika Karunaratne\",\n    7: \"Maheesh Theekshana\",\n    8: \"Asitha Fernando\",\n    9: \"Dilshan Madushanka\",\n    10: \"Matheesha Pathirana\",\n  },\n};\n\nconst getTeams = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_TEAM\": {\n      state = action.payload;\n      return state;\n    }\n    case \"GET_TEAM\":\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default getTeams;\n","const enableDynamicSquads = true;\n\nconst dynamicSquads = (state = enableDynamicSquads, action) => {\n  switch (action.type) {\n    case \"DISABLE\": {\n      return !state;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default dynamicSquads;\n","import thunk from \"redux-thunk\";\nimport { applyMiddleware } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport manageScores from \"../reducers/manageScores\";\nimport initPickTeams from \"../reducers/initPickTeamsReducer\";\nimport setFirstTeams from \"../reducers/setFirstTeamsReducer\";\nimport getTeams from \"../reducers/teamsReducer\";\nimport { createStore } from \"redux\";\nimport dynamicSquads from \"../reducers/dynamicSquads\";\n\nconst rootReducer = combineReducers({\n  manageScores,\n  initPickTeams,\n  setFirstTeams,\n  getTeams,\n  dynamicSquads,\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import PickTeams from \"./components/PickTeams\";\nimport { Provider } from \"react-redux\";\nimport newStore from \"./redux-setup/store/\";\nimport { AppBar } from \"@material-ui/core\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  useEffect(() => {\n    document.title = \"Cricket 2021\";\n  }, []);\n  return (\n    <Provider store={newStore}>\n      <div className=\"App\">\n        <AppBar position=\"static\">\n          <h2 style={{ alignSelf: \"center\" }}>Cricket 2021</h2>\n        </AppBar>\n        <PickTeams />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}