{"version":3,"sources":["redux-setup/actions/pickTeams.js","redux-setup/actions/scoreX.js","redux-setup/actions/completeInnings.js","redux-setup/actions/resetState.js","components/ScoreCard.js","components/TestComponent.js","components/PickTeams.js","helpers/randomNumber.js","redux-setup/reducers/manageScores.js","redux-setup/reducers/initPickTeamsReducer.js","redux-setup/reducers/setFirstTeamsReducer.js","redux-setup/reducers/teamsReducer.js","redux-setup/store/index.js","App.js","reportWebVitals.js","index.js"],"names":["pickTeams","team1","team2","dispatch","type","payload","scoreX","team","X","getState","run","completeInnings","resetState","ScoreCard","props","ppl","Table","style","maxWidth","maxHeight","float","aria-label","TableBody","map","index","TableRow","TableCell","color","track","player_1","player_2","teamData","team1Stats","Date","now","team2Stats","connect","state","scoreData","manageScores","getTeams","scoreDispatch","completeInningsDispatch","resetDispatch","useState","message","setMessage","useRef","useEffect","gameover","team1Wickets","team1BallsFaced","current","onStrike","batterIndex","offStrike","team2Total","team1Total","team2Wickets","team2BallsFaced","className","display","justifyContent","toPrecision","currentTeamBatting","fontWeight","Button","variant","onClick","i","Math","floor","random","pickTeamDispatch","React","openTeam1","setOpenTeam1","openTeam2","setOpenTeam2","firstTeam","setFirstTeam","secondTeam","setSecondTeam","teams","marginLeft","marginTop","InputLabel","shrink","id","Select","label","labelId","open","onClose","onOpen","value","onChange","event","target","MenuItem","getCeilValue","prefixArray","randomValue","ceilValue","length","RandomWithIndex","sum","cumulativeSum","arr","prefix","initialState","innings","scoreRunsReducer","action","updatedRun","initPickTeams","team1Name","team2Name","team1Squad","team2Squad","setFirstTeams","TEAM1","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","App","document","title","newStore","AppBar","position","alignSelf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"6OAMeA,EANC,SAACC,EAAMC,GACnB,OAAO,SAACC,GACJA,EAAS,CAACC,KAAK,aAAaC,QAAQ,CAACJ,MAAMA,EAAMC,MAAMA,O,gBCIhDI,EANF,SAACC,EAAKC,GACf,OAAO,SAACL,EAASM,GAEbN,EAAS,CAACC,KAAK,QAAQC,QAAQ,CAACK,IAAQ,IAAJF,EAAM,EAAEA,OCIrCG,EAPO,SAACJ,GACnB,MAAO,CACHH,KAAK,WACLC,QAASE,ICIFK,EAPE,WACb,MAAO,CACHR,KAAK,gB,oCC+BES,MA1Bf,SAAmBC,GACf,IAAMC,EAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAClC,OACI,gCAEI,cAACC,EAAA,EAAD,CAAOC,MAAO,CAACC,SAAU,IAAIC,UAAU,IAAIC,MAAM,QAASC,aAAW,mBAArE,SACI,cAACC,EAAA,EAAD,UAGQP,EAAIQ,KAAI,SAACC,GAAS,IAAD,EAAC,OAAO,mCAAE,eAACC,EAAA,EAAD,WAAU,cAACC,EAAA,EAAD,CAAWT,MAAO,CAACU,MAAOb,EAAMc,MAAM3B,MAAM4B,WAAWL,GAASV,EAAMc,MAAM3B,MAAM6B,UAAUN,EAAO,QAASA,EAAMV,EAAMc,MAAM3B,MAAM4B,UAAYL,EAAMV,EAAMc,MAAM3B,MAAM6B,SAAU,OAAO,OAAzL,SAAkMhB,EAAMiB,SAASjB,EAAMb,OAAOuB,KAAmB,cAACE,EAAA,EAAD,oBAAYZ,EAAMkB,WAAWR,UAA7B,QAAqC,eAJ1OS,KAAKC,OASlG,cAAClB,EAAA,EAAD,CAAOC,MAAO,CAACC,SAAU,IAAIC,UAAU,IAAIC,MAAM,SAAUC,aAAW,mBAAtE,SACI,cAACC,EAAA,EAAD,UAEQP,EAAIQ,KAAI,SAACC,GAAS,IAAD,EAAC,OAAO,mCAAE,eAACC,EAAA,EAAD,WAAU,cAACC,EAAA,EAAD,CAAWT,MAAO,CAACU,MAAOb,EAAMc,MAAM1B,MAAM2B,WAAWL,GAASV,EAAMc,MAAM1B,MAAM4B,UAAUN,EAAO,QAASA,EAAMV,EAAMc,MAAM1B,MAAM2B,UAAYL,EAAMV,EAAMc,MAAM1B,MAAM4B,SAAU,OAAO,OAAzL,SAAkMhB,EAAMiB,SAASjB,EAAMZ,OAAOsB,KAAmB,cAACE,EAAA,EAAD,oBAAYZ,EAAMqB,WAAWX,UAA7B,QAAqC,eAHzOS,KAAKC,WCuD/G,IAoBeE,eApBO,SAACC,GAEnB,MAAM,CACFC,UAAUD,EAAME,aAChBR,SAASM,EAAMG,aAKE,SAACrC,GAEtB,MAAM,CACFsC,cAAc,SAACjC,GAAD,OAAKL,EAASG,EAAO,KAAKE,KACxCkC,wBAAwB,SAACnC,GAAD,OAAQJ,EAASQ,EAAgBJ,KACzDoC,cAAc,kBAAIxC,EAASS,SAMpBwB,EAxFf,SAAuBtB,GAAQ,IAAD,cAEI8B,mBAAS,IAFb,mBAEnBC,EAFmB,KAEVC,EAFU,KAGpBlB,EAAQmB,iBAAO,MAkCrB,OA7BCC,qBAAU,WAGFlC,EAAMwB,UAAUW,UACiB,KAA/BnC,EAAMwB,UAAUY,cAAuD,MAAlCpC,EAAMwB,UAAUa,kBAChDvB,EAAMwB,UACNxB,EAAMwB,QAAQ,GACdxB,EAAMwB,QAAN,2BAAoBxB,EAAMwB,SAA1B,IAAkCnD,MAAM,2BAAI2B,EAAMwB,QAAQnD,OAAnB,IAAyB4B,SAASf,EAAMwB,UAAUe,SAASC,YAAYxB,SAAShB,EAAMwB,UAAUiB,UAAUD,iBAErJxC,EAAM4B,wBAAwB,UAGJ,KAA/B5B,EAAMwB,UAAUY,cAAuD,MAAlCpC,EAAMwB,UAAUa,kBACjDrC,EAAMwB,UAAUkB,WAAW1C,EAAMwB,UAAUmB,YAC1C7B,EAAMwB,QAAN,2BAAoBxB,EAAMwB,SAA1B,IAAkClD,MAAM,2BAAI0B,EAAMwB,QAAQnD,OAAnB,IAAyB4B,SAASf,EAAMwB,UAAUe,SAASC,YAAYxB,SAAShB,EAAMwB,UAAUiB,UAAUD,gBACjJR,EAAW,GAAD,OAAIhC,EAAMwB,UAAUpC,MAApB,mBAAoC,GAAGY,EAAMwB,UAAUoB,aAAvD,cAEN5C,EAAMwB,UAAUkB,aAAa1C,EAAMwB,UAAUmB,YAA8C,KAA/B3C,EAAMwB,UAAUoB,cAAuD,MAAlC5C,EAAMwB,UAAUqB,gBAIjH7C,EAAMwB,UAAUkB,WAAW1C,EAAMwB,UAAUmB,aAA8C,KAA/B3C,EAAMwB,UAAUoB,cAAuD,MAAlC5C,EAAMwB,UAAUqB,mBACnH/B,EAAMwB,QAAN,2BAAoBxB,EAAMwB,SAA1B,IAAkClD,MAAM,2BAAI0B,EAAMwB,QAAQnD,OAAnB,IAAyB4B,SAASf,EAAMwB,UAAUe,SAASC,YAAYxB,SAAShB,EAAMwB,UAAUiB,UAAUD,gBACjJR,EAAW,GAAD,OAAIhC,EAAMwB,UAAUrC,MAApB,iBAAkCa,EAAMwB,UAAUpC,MAAlD,eAA8DY,EAAMwB,UAAUmB,WAAW3C,EAAMwB,UAAUkB,WAAzG,YALV5B,EAAMwB,QAAN,2BAAoBxB,EAAMwB,SAA1B,IAAkClD,MAAM,2BAAI0B,EAAMwB,QAAQnD,OAAnB,IAAyB4B,SAASf,EAAMwB,UAAUe,SAASC,YAAYxB,SAAShB,EAAMwB,UAAUiB,UAAUD,gBACjJR,EAAW,kBAQpB,CAAChC,EAAMwB,YAGN,gCAEQ,qCACA,uBAAMsB,UAAU,aAAa3C,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAAnE,UACI,6BAAKhD,EAAMwB,UAAUrC,QADzB,WAEI,+BAAKa,EAAMwB,UAAUmB,WAArB,IAAkC3C,EAAMwB,UAAUY,aAAlD,UAAuEpC,EAAMwB,UAAUa,iBAAiB,IAAIrC,EAAMwB,UAAUa,gBAAgB,GAAGY,YAAY,IAAIjD,EAAMwB,UAAUa,gBAAgB,GAAGY,YAAY,GAA9M,IAAmNjD,EAAMwB,UAAUa,gBAAgB,EAAnP,kBAA2PrC,EAAMwB,UAAUmB,aAAa3C,EAAMwB,UAAUa,iBAAiB,GAAG,IAAIY,YAAY,UAA5U,QAAgV,QAGpV,uBAAMH,UAAU,aAAa3C,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAAnE,UACI,6BAAKhD,EAAMwB,UAAUpC,QADzB,WAEI,+BAAKY,EAAMwB,UAAUkB,WAArB,IAAkC1C,EAAMwB,UAAUoB,aAAlD,UAAuE5C,EAAMwB,UAAUqB,iBAAiB,IAAI7C,EAAMwB,UAAUqB,gBAAgB,GAAGI,YAAY,IAAIjD,EAAMwB,UAAUqB,gBAAgB,GAAGI,YAAY,GAA9M,IAAmNjD,EAAMwB,UAAUqB,gBAAgB,EAAnP,kBAA2P7C,EAAMwB,UAAUkB,aAAa1C,EAAMwB,UAAUqB,iBAAiB,GAAG,IAAII,YAAY,UAA5U,QAAgV,WAIvV,uBAEQjD,EAAMwB,UAAU0B,qBAAqBlD,EAAMwB,UAAUrC,MAAO,gCAAK,uBAAMgB,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAA5C,UAAwDhD,EAAMiB,SAASjB,EAAMwB,UAAUrC,OAAOa,EAAMwB,UAAUe,SAASC,aAAvH,qCAAyIxC,EAAMwB,UAAUN,WAAWlB,EAAMwB,UAAUe,SAASC,oBAA7L,QAA2M,KAAS,uBAAK,uBAAMrC,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAA5C,UAAwDhD,EAAMiB,SAASjB,EAAMwB,UAAUrC,OAAOa,EAAMwB,UAAUiB,UAAUD,aAAxH,qCAA0IxC,EAAMwB,UAAUN,WAAWlB,EAAMwB,UAAUiB,UAAUD,oBAA/L,QAA6M,QAAgB,gCAAK,uBAAMrC,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAA5C,UAAwDhD,EAAMiB,SAASjB,EAAMwB,UAAUpC,OAAOY,EAAMwB,UAAUe,SAASC,aAAvH,qCAAyIxC,EAAMwB,UAAUH,WAAWrB,EAAMwB,UAAUe,SAASC,oBAA7L,QAA2M,KAAS,uBAAK,uBAAMrC,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAA5C,UAAwDhD,EAAMiB,SAASjB,EAAMwB,UAAUpC,OAAOY,EAAMwB,UAAUiB,UAAUD,aAAxH,qCAA0IxC,EAAMwB,UAAUH,WAAWrB,EAAMwB,UAAUiB,UAAUD,oBAA/L,QAA6M,QAE16B,uBAGGxC,EAAMwB,UAAUW,SAAS,qCAAE,sBAAMhC,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,SAASG,WAAW,OAAhE,SAAyEpB,IAAe,uBAAK,sBAAM5B,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAA5C,SAAuD,cAACI,EAAA,EAAD,CAAQC,QAAQ,YAAYxC,MAAM,UAAUyC,QAAS,WAAKtD,EAAM6B,iBAAhE,6BAAgH,sBAAM1B,MAAO,CAAC4C,QAAQ,OAAOC,eAAe,UAA5C,SAAuD,cAACI,EAAA,EAAD,CAAQvC,MAAM,UAAUwC,QAAQ,YAAYC,QAAS,WAAK,IAAI,IAAIC,EAAE,EAAEA,EAAE,EAAEA,IAAIvD,EAAM2B,cAAe6B,KAAKC,MAAoB,EAAdD,KAAKE,YAAnH,oBAGzV1D,EAAMwB,UAAUW,SAAS,cAAC,EAAD,CAAWrB,MAAOA,EAAMwB,QAASnD,MAAOa,EAAMwB,UAAUrC,MAAOC,MAAOY,EAAMwB,UAAUpC,MAAO6B,SAAUjB,EAAMiB,SAAUC,WAAYlB,EAAMwB,UAAUN,WAAYG,WAAYrB,EAAMwB,UAAUH,aAAc,mCCc/O,I,UAWeC,eAXO,SAACC,GACnB,MAAM,CACFC,UAAUD,EAAME,iBAGC,SAACpC,GACtB,MAAM,CACFsE,iBAAiB,SAACxE,EAAMC,GAAP,OAAeC,EAASH,EAAUC,EAAMC,QAIlDkC,EAtFf,SAAmBtB,GAAQ,IAAD,EACY4D,IAAM9B,UAAS,GAD3B,mBACf+B,EADe,KACJC,EADI,OAEYF,IAAM9B,UAAS,GAF3B,mBAEfiC,EAFe,KAEJC,EAFI,OAGYlC,mBAAS,SAHrB,mBAGfmC,EAHe,KAGJC,EAHI,OAIapC,mBAAS,YAJtB,mBAIfqC,EAJe,KAIJC,EAJI,KAKhBC,EAAQpC,iBAAO,CAAC,QAAQ,WAAW,YAAY,UAAU,gBA0B/D,OACI,8BAEgC,KAAxBjC,EAAMwB,UAAUrC,MAChB,mCACI,sBAAKgB,MAAO,CAACmE,WAAW,QAAQC,UAAU,MAA1C,UACA,cAACC,EAAA,EAAD,CAAYC,QAAM,EAACC,GAAG,YAAtB,wBAGA,cAACC,EAAA,EAAD,CAAQC,MAAM,aACdC,QAAQ,oCAAoCH,GAAG,YAAYI,KAAMjB,EAAWkB,QA3BxE,WAChBjB,GAAa,IA0BiGkB,OAvB7F,WACjBlB,GAAa,IAsBqHmB,MAAOhB,EAAWiB,SAnC5H,SAACC,GACzBjB,EAAaiB,EAAMC,OAAOH,QAiCd,SAGIZ,EAAM/B,QAAQ7B,KAAI,SAAChB,GAAD,OACdA,IAAO0E,EAAW,cAACkB,EAAA,EAAD,CAAUJ,MAAOxF,EAAjB,SAAwBA,IAAiB,QAInE,uBACA,uBACA,uBACA,cAAC+E,EAAA,EAAD,CAAYC,QAAM,EAACC,GAAG,aAAtB,yBAGA,cAACC,EAAA,EAAD,CACAE,QAAQ,oCAAoCH,GAAG,aAAaI,KAAMf,EAAWgB,QAjCxE,WACjBf,GAAa,IAgCmGgB,OA7B9F,WAClBhB,GAAa,IA4BwHiB,MAAOd,EAAYe,SA7C/H,SAACC,GAC1Bf,EAAce,EAAMC,OAAOH,QA2Cf,SAGIZ,EAAM/B,QAAQ7B,KAAI,SAAChB,GAAD,OACdA,IAAOwE,EAAU,cAACoB,EAAA,EAAD,CAAUJ,MAAOxF,EAAjB,SAAwBA,IAAiB,QAIlE,uBACA,uBACA,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,YAAYxC,MAAM,UAAUyC,QAAS,WAAKtD,EAAM2D,iBAAiBM,EAAUE,IAA3F,uBAGC,cAAC,EAAD,S,uBC5EfmB,EAAa,SAACC,EAAYC,GAG5B,IADA,IAAIC,GAAW,EACPlC,EAAE,EAAEA,EAAEgC,EAAYG,QAAQ,CAC9B,KAAGF,GAAaD,EAAYhC,IAGxB,CACAkC,EAAYlC,EACZ,MAJAA,IAOR,OAAgB,IAAbkC,EAAuBF,EAAYG,OAAO,EAEtCD,GAyGIE,EArGO,SAACnD,GAEnB,IAAuBoD,EAAjBC,GAAiBD,EAA8B,EAAvB,SAAAX,GAAK,OAAIW,GAAOX,IAC1Ca,EAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAElBC,EAAO,GAGX,OAAOvD,GAEH,KAAM,EAEFuD,EADK,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GACRtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GACRtF,IAAIoF,GAElB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAK3D,OAAOI,EAHMR,EAAaS,EAAOrC,IAKrC,KAAK,EAEDqC,EADK,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GACRtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GACRtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GACPtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GACPtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,GACPtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GACRtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,GACRtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,KAAK,EAEDqC,EADK,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,GAAG,GACTtF,IAAIoF,GAClB,IAAInC,EAASF,KAAKC,MAAMD,KAAKE,SAASqC,EAAOA,EAAOL,OAAO,IAG3D,OAAOI,EAFMR,EAAaS,EAAOrC,IAIrC,QAEI,OAAO,IC/GbsC,EAAa,CACf7G,MAAM,GACNC,MAAM,GACN8D,mBAAmB,GACnBX,SAAS,CAACC,aAAa,GACvBC,UAAU,CAACD,YAAY,GACvBtB,WAAW,GACXG,WAAW,GACX4E,QAAQ,EACRtD,WAAW,EACXD,WAAW,EACXN,aAAa,EACbQ,aAAa,EACbT,UAAS,EACTE,gBAAgB,EAChBQ,gBAAgB,GAqGLqD,EAlGQ,WAA8B,IAA7B3E,EAA4B,uDAAtByE,EAAaG,EAAS,uCAGhD,OAAOA,EAAO7G,MACV,IAAK,QACD,GAAGiC,EAAMY,SAAU,OAAOZ,EAC1B,IAmBkD,EAMtC,EAOsC,EAKtC,EArCR6E,EAAaT,EAAgBpE,EAAMgB,SAASC,aAGhD,OAAiB,IAAd4D,EAEI7E,EAAM2B,qBAAqB3B,EAAMpC,MACzB,2BACAoC,GADP,IACakB,UAAU,2BAAIlB,EAAMkB,WAAX,IAAqBD,YAAYjB,EAAMgB,SAASC,cAAaD,SAAS,2BAAIhB,EAAMgB,UAAX,IAAoBC,YAAYjB,EAAMgB,SAASC,YAAYjB,EAAMkB,UAAUD,YAAYjB,EAAMgB,SAASC,YAAY,EAAEjB,EAAMkB,UAAUD,YAAY,IAAGJ,aAAab,EAAMgB,SAASC,YAAYjB,EAAMkB,UAAUD,YAAYjB,EAAMgB,SAASC,YAAY,EAAEjB,EAAMkB,UAAUD,YAAY,EAAEH,gBAAgBd,EAAMc,gBAAgB,IAInZ,2BACOd,GADP,IACakB,UAAU,2BAAIlB,EAAMkB,WAAX,IAAqBD,YAAYjB,EAAMgB,SAASC,cAAaD,SAAS,2BAAIhB,EAAMgB,UAAX,IAAoBC,YAAYjB,EAAMgB,SAASC,YAAYjB,EAAMkB,UAAUD,YAAYjB,EAAMgB,SAASC,YAAY,EAAEjB,EAAMkB,UAAUD,YAAY,IAAGI,aAAarB,EAAMgB,SAASC,YAAYjB,EAAMkB,UAAUD,YAAYjB,EAAMgB,SAASC,YAAY,EAAEjB,EAAMkB,UAAUD,YAAY,EAAEK,gBAAgBtB,EAAMsB,gBAAgB,IAMpZuD,EAAW,EACP7E,EAAM2B,qBAAqB3B,EAAMpC,MACzB,2BACAoC,GADP,IACaoB,WAAWpB,EAAMoB,WAAWyD,EAAWlF,WAAW,2BAAIK,EAAML,YAAX,kBAAuBK,EAAMgB,SAASC,aAAa,UAACjB,EAAML,WAAWK,EAAMgB,SAASC,oBAAjC,QAA+C,GAAG4D,IAAY/D,gBAAgBd,EAAMc,gBAAgB,EAAEE,SAAS,2BAAIhB,EAAMgB,UAAX,IAAoBC,YAAYjB,EAAMkB,UAAUD,cAAaC,UAAU,2BAAIlB,EAAMkB,WAAX,IAAqBD,YAAYjB,EAAMgB,SAASC,gBAKrV,2BACOjB,GADP,IACamB,WAAWnB,EAAMmB,WAAW0D,EAAW/E,WAAW,2BAAIE,EAAMF,YAAX,kBAAuBE,EAAMgB,SAASC,aAAa,UAACjB,EAAMF,WAAWE,EAAMgB,SAASC,oBAAjC,QAA+C,GAAG4D,IAAYvD,gBAAgBtB,EAAMsB,gBAAgB,EAAEN,SAAS,2BAAIhB,EAAMgB,UAAX,IAAoBC,YAAYjB,EAAMkB,UAAUD,cAAaC,UAAU,2BAAIlB,EAAMkB,WAAX,IAAqBD,YAAYjB,EAAMgB,SAASC,gBAKtVjB,EAAM2B,qBAAqB3B,EAAMpC,MAChC,2BACOoC,GADP,IACaoB,WAAWpB,EAAMoB,WAAWyD,EAAWlF,WAAW,2BAAIK,EAAML,YAAX,kBAAuBK,EAAMgB,SAASC,aAAa,UAACjB,EAAML,WAAWK,EAAMgB,SAASC,oBAAjC,QAA+C,GAAG4D,IAAY/D,gBAAgBd,EAAMc,gBAAgB,IAI9M,2BACAd,GADP,IACamB,WAAWnB,EAAMmB,WAAW0D,EAAW/E,WAAW,2BAAIE,EAAMF,YAAX,kBAAuBE,EAAMgB,SAASC,aAAa,UAACjB,EAAMF,WAAWE,EAAMgB,SAASC,oBAAjC,QAA+C,GAAG4D,IAAYvD,gBAAgBtB,EAAMsB,gBAAgB,IAQrO,IAAK,WAEF,OAAGtB,EAAM2B,qBAAqB3B,EAAMpC,MAChC,2BACOoC,GADP,IACa2B,mBAAmB3B,EAAMnC,MAAMmD,SAAS,CAACC,aAAa,GAAGC,UAAU,CAACD,YAAY,KAGzFjB,EAAM2B,qBAAqB3B,EAAMnC,OAA+B,KAArBmC,EAAMqB,cAA6C,MAAxBrB,EAAMsB,gBAK5EtB,EAAM2B,qBAAqB3B,EAAMnC,OAASmC,EAAMmB,WAAWnB,EAAMoB,WACxE,2BACOpB,GADP,IACaY,UAAS,IAGXZ,EATR,2BACOA,GADP,IACaY,UAAS,IAU7B,IAAK,cAED,MAAO,CACHhD,MAAM,GACNC,MAAM,GACN8D,mBAAmB,GACnBX,SAAS,CAACC,aAAa,GACvBC,UAAU,CAACD,YAAY,GACvBtB,WAAW,GACXG,WAAW,GACX4E,QAAQ,EACRtD,WAAW,EACXD,WAAW,EACXN,aAAa,EACbQ,aAAa,EACbT,UAAS,GAEjB,IAAK,aACD,OAAO,2BACAZ,GADP,IACapC,MAAMgH,EAAO5G,QAAQJ,MAAMC,MAAM+G,EAAO5G,QAAQH,MAAM+C,UAAS,EAAMe,mBAAmBiD,EAAO5G,QAAQJ,MAAMkD,gBAAgB,EAAEQ,gBAAgB,IAEhK,QACI,OAAOtB,IClHbyE,EAAa,GAYJK,EAXK,WAA8B,IAA7B9E,EAA4B,uDAAtByE,EAAaG,EAAS,uCAE7C,OAAOA,EAAO7G,MACV,IAAK,aACD,OAAO,2BAAI0G,GAAX,IAAwB7G,MAAMgH,EAAO5G,QAAQ+G,UAAUlH,MAAM+G,EAAO5G,QAAQgH,UAAUrF,WAAWiF,EAAO5G,QAAQiH,WAAWnF,WAAW8E,EAAO5G,QAAQkH,aAEzJ,QACI,OAAOlF,ICRbyE,EAAa,GAiBJU,EAhBK,WAA8B,IAA7BnF,EAA4B,uDAAtByE,EAAaG,EAAS,uCAC7C,OAAOA,EAAO7G,MACV,IAAK,YACD,OAAGiC,EAAMpC,QAAQgH,EAAO5G,QAAQoH,MACrB,2BAAIX,GAAX,IACI7G,MAAMoC,EAAMnC,MAAMA,MAAMmC,EAAMpC,MAAM+D,mBAAmB3B,EAAMnC,MAAM8B,WAAWK,EAAMF,WAAWA,WAAWE,EAAML,WAAW+E,QAAQ,IAGhI1E,EAEf,QACI,OAAOA,ICZbyE,EAAa,CACf,2BAAY,EAAG,gBAAf,cAA8B,EAAE,kBAAhC,cAAiD,EAAE,eAAnD,cAAiE,EAAE,gBAAnE,cAAkF,EAAE,gBAApF,cAAmG,EAAE,YAArG,cAAgH,EAAE,iBAAlH,cAAkI,EAAE,mBAApI,cAAsJ,EAAE,qBAAxJ,cAA4K,EAAE,kBAA9K,cAA+L,EAAE,kBAAjM,cAAkN,GAAG,eAArN,GACA,8BAAe,EAAG,eAAlB,cAAgC,EAAE,gBAAlC,cAAiD,EAAE,cAAnD,cAAgE,EAAE,cAAlE,cAA+E,EAAE,mBAAjF,cAAmG,EAAE,kBAArG,cAAsH,EAAE,iBAAxH,cAAwI,EAAE,cAA1I,cAAuJ,EAAE,iBAAzJ,cAAyK,EAAE,aAA3K,cAAuL,EAAE,oBAAzL,cAA4M,GAAG,cAA/M,GACA,+BAAgB,EAAG,eAAnB,cAAiC,EAAE,gBAAnC,cAAkD,EAAE,eAApD,cAAkE,EAAE,sBAApE,cAAyF,EAAE,kBAA3F,cAA4G,EAAE,iBAA9G,cAA8H,EAAE,cAAhI,cAA6I,EAAE,eAA/I,cAA6J,EAAE,kBAA/J,cAAgL,EAAE,cAAlL,cAA+L,EAAE,kBAAjM,cAAkN,GAAG,eAArN,GACA,6BAAc,EAAG,aAAjB,cAA6B,EAAE,kBAA/B,cAAgD,EAAE,YAAlD,cAA6D,EAAE,eAA/D,cAA6E,EAAE,cAA/E,cAA4F,EAAE,eAA9F,cAA4G,EAAE,gBAA9G,cAA6H,EAAE,iBAA/H,cAA+I,EAAE,gBAAjJ,cAAgK,EAAE,eAAlK,cAAgL,EAAE,aAAlL,cAA8L,GAAG,cAAjM,GACA,iCAAkB,EAAG,mBAArB,cAAuC,EAAE,iBAAzC,cAAyD,EAAE,kBAA3D,cAA4E,EAAE,oBAA9E,cAAiG,EAAE,gBAAnG,cAAkH,EAAE,aAApH,cAAgI,EAAE,gBAAlI,cAAiJ,EAAE,sBAAnJ,cAAwK,EAAE,gBAA1K,cAAyL,EAAE,iBAA3L,cAA2M,EAAE,eAA7M,cAA2N,GAAG,kBAA9N,IAaWtE,EAVA,WAA8B,IAA7BH,EAA4B,uDAAtByE,EAAaG,EAAS,uCACxC,OAAOA,EAAO7G,MAEV,IAAK,WAEL,QACI,OAAOiC,ICLbqF,EAAYC,YAAgB,CAE9BpF,aAAaA,EACb4E,cAAcA,EACdK,cAAcA,EACdhF,SAASA,IAKEoF,EAFHC,YAAYH,EAAYI,YAAgBC,M,SCKrCC,MAhBf,WAIE,OAHAhF,qBAAU,WACTiF,SAASC,MAAM,iBACb,IAED,cAAC,IAAD,CAAUN,MAAOO,EAAjB,SACA,sBAAKvE,UAAU,MAAf,UACE,cAACwE,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,oBAAIpH,MAAO,CAACqH,UAAU,UAAtB,4BAEF,cAAC,EAAD,UCJSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,SAM1BZ,M","file":"static/js/main.97bc25ce.chunk.js","sourcesContent":["const pickTeams=(team1,team2)=>{\r\n    return (dispatch)=>{\r\n        dispatch({type:'PICK_TEAMS',payload:{team1:team1,team2:team2}})\r\n    }\r\n}\r\n\r\nexport default pickTeams;","const scoreX=(team,X)=>{\r\n    return (dispatch,getState)=>{\r\n        //console.log(getState());        \r\n        dispatch({type:'SCORE',payload:{run:X===5?1:X}})\r\n    }\r\n}\r\nexport default scoreX;","const completeInnings=(team)=>{\r\n    return {\r\n        type:'COMPLETE',\r\n        payload: team   \r\n    }\r\n}\r\n\r\nexport default completeInnings;","const resetState=()=>{\r\n    return {\r\n        type:'RESET_STATE',        \r\n    }\r\n\r\n}\r\n\r\nexport default resetState;","import React from 'react'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableBody from '@material-ui/core/TableBody';\r\n\r\n\r\nfunction ScoreCard(props) {\r\n    const ppl=[-1,0,1,2,3,4,5,6,7,8,9,10];\r\n    return (\r\n        <div>\r\n            {/* {console.log(props.track)} */}\r\n            <Table style={{maxWidth: 500,maxHeight:100,float:'left'}} aria-label=\"customized table\" key={Date.now()}>\r\n                <TableBody>\r\n                    {/* <tr>{Object.keys(props.teamData[\"India\"]).map((key)=>[props.teamData[\"India\"][key],props.team1Stats[key]??0])}</tr> */}\r\n                    {\r\n                        ppl.map((index)=>{return <><TableRow><TableCell style={{color:(props.track.team1.player_1===index || props.track.team1.player_2==index)?'green':(index>props.track.team1.player_1 || index>props.track.team1.player_2)?'gray':'red'}}>{props.teamData[props.team1][index]}</TableCell><TableCell>{props.team1Stats[index]??0}</TableCell></TableRow></>})                          \r\n                    }                    \r\n                </TableBody>\r\n            </Table>             \r\n            \r\n            <Table style={{maxWidth: 500,maxHeight:100,float:'right'}} aria-label=\"customized table\" key={Date.now()}>\r\n                <TableBody>                    \r\n                    {\r\n                        ppl.map((index)=>{return <><TableRow><TableCell style={{color:(props.track.team2.player_1===index || props.track.team2.player_2==index)?'green':(index>props.track.team2.player_1 || index>props.track.team2.player_2)?'gray':'red'}}>{props.teamData[props.team2][index]}</TableCell><TableCell>{props.team2Stats[index]??0}</TableCell></TableRow></>})                          \r\n                    }                    \r\n                </TableBody>\r\n            </Table>             \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreCard\r\n","import React,{useEffect, useState, useRef} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport scoreX from '../redux-setup/actions/scoreX'\r\nimport completeInnings from '../redux-setup/actions/completeInnings'\r\nimport resetState from '../redux-setup/actions/resetState'\r\nimport ScoreCard from './ScoreCard';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction TestComponent(props) {\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n    const track = useRef(null)\r\n    // useEffect(() => {\r\n    //     props.pickTeamDispatch();        \r\n    // }, [])\r\n   \r\n     useEffect(()=>{  \r\n\r\n         //console.log('inside useEffect')\r\n         if(!props.scoreData.gameover){\r\n            if(props.scoreData.team1Wickets===10 || props.scoreData.team1BallsFaced===300){                        \r\n                if(!track.current) {\r\n                    track.current={}\r\n                    track.current = {...track.current,team1:{...track.current.team1,player_1:props.scoreData.onStrike.batterIndex,player_2:props.scoreData.offStrike.batterIndex}}                \r\n                }\r\n                props.completeInningsDispatch('team1');\r\n            }\r\n        }\r\n        if(props.scoreData.team1Wickets===10 || props.scoreData.team1BallsFaced===300){\r\n            if(props.scoreData.team2Total>props.scoreData.team1Total){   \r\n                track.current = {...track.current,team2:{...track.current.team1,player_1:props.scoreData.onStrike.batterIndex,player_2:props.scoreData.offStrike.batterIndex}}\r\n                setMessage(`${props.scoreData.team2} won by ${10-props.scoreData.team2Wickets} wickets`)\r\n            }\r\n            else if(props.scoreData.team2Total===props.scoreData.team1Total && (props.scoreData.team2Wickets===10 || props.scoreData.team2BallsFaced===300)){\r\n                track.current = {...track.current,team2:{...track.current.team1,player_1:props.scoreData.onStrike.batterIndex,player_2:props.scoreData.offStrike.batterIndex}}\r\n                setMessage(`Match Tied`)\r\n            }\r\n            else if(props.scoreData.team2Total<props.scoreData.team1Total && (props.scoreData.team2Wickets===10 || props.scoreData.team2BallsFaced===300)){\r\n                track.current = {...track.current,team2:{...track.current.team1,player_1:props.scoreData.onStrike.batterIndex,player_2:props.scoreData.offStrike.batterIndex}}\r\n                setMessage(`${props.scoreData.team1} beat ${props.scoreData.team2} by ${props.scoreData.team1Total-props.scoreData.team2Total} runs`)\r\n            }\r\n        }\r\n\r\n     },[props.scoreData])\r\n\r\n    return (\r\n        <div>            \r\n            {   \r\n                <>\r\n                <span className='score_data' style={{display:'flex',justifyContent:'center'}}>\r\n                    <h3>{props.scoreData.team1}</h3>&nbsp;&nbsp;\r\n                    <h3>{props.scoreData.team1Total}/{props.scoreData.team1Wickets} Overs:{props.scoreData.team1BallsFaced>=60?(props.scoreData.team1BallsFaced/6).toPrecision(2):(props.scoreData.team1BallsFaced/6).toPrecision(1)}.{props.scoreData.team1BallsFaced%6} RR:{(props.scoreData.team1Total/((props.scoreData.team1BallsFaced||1)/6)).toPrecision(3)??0}</h3>\r\n                </span>\r\n                \r\n                <span className='score_data' style={{display:'flex',justifyContent:'center'}}>\r\n                    <h3>{props.scoreData.team2}</h3>&nbsp;&nbsp;\r\n                    <h3>{props.scoreData.team2Total}/{props.scoreData.team2Wickets} Overs:{props.scoreData.team2BallsFaced>=60?(props.scoreData.team2BallsFaced/6).toPrecision(2):(props.scoreData.team2BallsFaced/6).toPrecision(1)}.{props.scoreData.team2BallsFaced%6} RR:{(props.scoreData.team2Total/((props.scoreData.team2BallsFaced||1)/6)).toPrecision(3)??0}</h3>                \r\n                </span>\r\n                </>\r\n            }\r\n            {<br/>}\r\n            {\r\n                    (props.scoreData.currentTeamBatting===props.scoreData.team1)?<div><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team1][props.scoreData.onStrike.batterIndex]}👉🏾{props.scoreData.team1Stats[props.scoreData.onStrike.batterIndex]??0}</span><br/><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team1][props.scoreData.offStrike.batterIndex]}👉🏾{props.scoreData.team1Stats[props.scoreData.offStrike.batterIndex]??0}</span></div>:<div><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team2][props.scoreData.onStrike.batterIndex]}👉🏾{props.scoreData.team2Stats[props.scoreData.onStrike.batterIndex]??0}</span><br/><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team2][props.scoreData.offStrike.batterIndex]}👉🏾{props.scoreData.team2Stats[props.scoreData.offStrike.batterIndex]??0}</span></div>\r\n            }\r\n            {<hr/>}\r\n            {   \r\n            \r\n                props.scoreData.gameover?<><span style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>{message}</span><br/><span style={{display:'flex',justifyContent:'center'}}><Button variant=\"contained\" color=\"primary\" onClick={()=>{props.resetDispatch()}}>Play Again</Button></span></>:<span style={{display:'flex',justifyContent:'center'}}><Button color=\"primary\" variant=\"contained\" onClick={()=>{for(let i=0;i<6;i++)props.scoreDispatch((Math.floor(Math.random()*7)))}}>PLAY</Button></span>                \r\n            }\r\n\r\n            {props.scoreData.gameover?<ScoreCard track={track.current} team1={props.scoreData.team1} team2={props.scoreData.team2} teamData={props.teamData} team1Stats={props.scoreData.team1Stats} team2Stats={props.scoreData.team2Stats}/>:<></>}\r\n                                      \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    //console.log(state);\r\n    return{\r\n        scoreData:state.manageScores,\r\n        teamData:state.getTeams\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return{\r\n        scoreDispatch:(X)=>dispatch(scoreX(null,X)),\r\n        completeInningsDispatch:(team)=>dispatch(completeInnings(team)),\r\n        resetDispatch:()=>dispatch(resetState()),\r\n        //pickTeamDispatch:()=>dispatch(pickTeams(\"India\",\"Pakistan\")),        \r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TestComponent)\r\n","import React,{useState, useRef} from 'react'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { connect } from 'react-redux';\r\nimport pickTeams from '../redux-setup/actions/pickTeams';\r\nimport { Button } from '@material-ui/core';\r\nimport TestComponent from './TestComponent'\r\n\r\nfunction PickTeams(props) {\r\n    const [openTeam1, setOpenTeam1] = React.useState(false);\r\n    const [openTeam2, setOpenTeam2] = React.useState(false);\r\n    const [firstTeam, setFirstTeam] = useState(\"India\")\r\n    const [secondTeam,setSecondTeam] = useState(\"Pakistan\")\r\n    const teams = useRef([\"India\",\"Pakistan\",\"Australia\",\"England\",\"SouthAfrica\"])\r\n    const handleChangeFirstTeam=(event)=>{\r\n        setFirstTeam(event.target.value)\r\n    };\r\n\r\n    const handleChangeSecondTeam=(event)=>{\r\n        setSecondTeam(event.target.value);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenTeam1(false);\r\n    };\r\n    \r\n      const handleOpen = () => {\r\n        setOpenTeam1(true);\r\n    };\r\n\r\n    const handleClose2 = () => {\r\n        setOpenTeam2(false);\r\n    };\r\n    \r\n      const handleOpen2 = () => {\r\n        setOpenTeam2(true);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.scoreData.team1===''?\r\n                <>\r\n                    <div style={{marginLeft:'47.5%',marginTop:'1%'}}>\r\n                    <InputLabel shrink id=\"firstTeam\">\r\n                    First Team\r\n                    </InputLabel>    \r\n                    <Select label=\"First Team\"\r\n                    labelId=\"demo-controlled-open-select-label\" id=\"firstTeam\" open={openTeam1} onClose={handleClose} onOpen={handleOpen} value={firstTeam} onChange={handleChangeFirstTeam}>        \r\n                    {\r\n                        teams.current.map((team)=>(\r\n                            team!==secondTeam?<MenuItem value={team}>{team}</MenuItem>:[]\r\n                        ))\r\n                    }\r\n                    </Select>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <InputLabel shrink id=\"secondTeam\">\r\n                    Second Team\r\n                    </InputLabel>    \r\n                    <Select\r\n                    labelId=\"demo-controlled-open-select-label\" id=\"secondTeam\" open={openTeam2} onClose={handleClose2} onOpen={handleOpen2} value={secondTeam} onChange={handleChangeSecondTeam}>        \r\n                    {\r\n                        teams.current.map((team)=>(\r\n                            team!==firstTeam?<MenuItem value={team}>{team}</MenuItem>:[]\r\n                        ))   \r\n                    }\r\n                    </Select>\r\n                    <br/>\r\n                    <br/>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={()=>{props.pickTeamDispatch(firstTeam,secondTeam)}}>PLAY</Button>\r\n                    </div>\r\n                    </>\r\n                    :<TestComponent/>  \r\n                }          \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        scoreData:state.manageScores\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        pickTeamDispatch:(team1,team2)=>dispatch(pickTeams(team1,team2))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(PickTeams)\r\n","const getCeilValue=(prefixArray,randomValue)=>{\r\n\r\n    var ceilValue=-2;\r\n    for(var i=0;i<prefixArray.length;){\r\n        if(randomValue>=prefixArray[i]){\r\n            i++;\r\n        }\r\n        else{ \r\n            ceilValue = i;\r\n            break;\r\n        }\r\n    }\r\n    if(ceilValue===-2) return prefixArray.length-1;\r\n\r\n    return ceilValue;\r\n\r\n}\r\n\r\nconst RandomWithIndex=(batterIndex)=>{    \r\n\r\n    const cumulativeSum = (sum => value => sum += value)(0);\r\n    var arr=[-1,0,1,2,3,4,6];\r\n    var freq=[];\r\n    var prefix=[];\r\n    //console.log(batterIndex);\r\n    //console.log(typeof(batterIndex));\r\n    switch(batterIndex){\r\n        \r\n        case -1:{\r\n            freq=[3,80,50,10,1,15,5]// RG Sharma 156 balls  166\r\n            prefix = freq.map(cumulativeSum)            \r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 1:{\r\n            freq=[3,70,45,14,0,12,2]//143 balls Shikhar 133\r\n            prefix = freq.map(cumulativeSum)\r\n            //console.log(prefix)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            //console.log(random)\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(index_rc)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 2:{\r\n            freq=[3,91,50,16,1,17,2]//Kohli 177 balls 165\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 3:{\r\n            freq=[4,80,45,16,1,10,5]//Shreyas 157 balls 150\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 4:{\r\n            freq=[5,91,45,7,1,18,6]//Pant 149 balls 178\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 5:{\r\n            freq=[5,91,40,5,1,12,7]//KL R 160 balls 181\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 6:{\r\n            freq=[6,80,38,5,1,15,8]//Pandya 158 balls 181\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 7:{\r\n            freq=[6,80,45,16,1,18,4]//Jadeja 165 balls 176\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 8:{\r\n            freq=[9,100,15,8,1,18,6]//Thakur 144 balls 127\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        case 9:{\r\n            freq=[9,100,25,15,1,18,2]//Bhuvi 160 balls 142\r\n            prefix = freq.map(cumulativeSum)\r\n            let random = Math.floor(Math.random()*prefix[prefix.length-1])\r\n            let index_rc=getCeilValue(prefix,random)\r\n            //console.log(arr[index_rc])\r\n            return arr[index_rc];\r\n        }\r\n        default:{            \r\n            //console.log('In default')\r\n            return 1;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default RandomWithIndex;","import RandomWithIndex from '../../helpers/randomNumber';\r\n\r\nconst initialState={    \r\n    team1:'',\r\n    team2:'', \r\n    currentTeamBatting:'',   \r\n    onStrike:{batterIndex:-1},\r\n    offStrike:{batterIndex:0},\r\n    team1Stats:{},\r\n    team2Stats:{},\r\n    innings:0,\r\n    team1Total:0,\r\n    team2Total:0,\r\n    team1Wickets:0,\r\n    team2Wickets:0,\r\n    gameover:false,\r\n    team1BallsFaced:0,\r\n    team2BallsFaced:0,\r\n}\r\n\r\nconst scoreRunsReducer=(state=initialState,action)=>{\r\n    //console.log(action);\r\n    //console.log(action.payload?.run);\r\n    switch(action.type){\r\n        case 'SCORE':{   \r\n            if(state.gameover) return state;\r\n            let updatedRun = RandomWithIndex(state.onStrike.batterIndex);\r\n            //console.log(updatedRun);\r\n            \r\n            if(updatedRun===-1){\r\n                //console.log(state.onStrike.batterIndex)\r\n                if(state.currentTeamBatting===state.team1){                                   \r\n                    return {\r\n                        ...state,offStrike:{...state.offStrike,batterIndex:state.onStrike.batterIndex},onStrike:{...state.onStrike,batterIndex:state.onStrike.batterIndex>state.offStrike.batterIndex?state.onStrike.batterIndex+1:state.offStrike.batterIndex+1},team1Wickets:state.onStrike.batterIndex>state.offStrike.batterIndex?state.onStrike.batterIndex+1:state.offStrike.batterIndex+1,team1BallsFaced:state.team1BallsFaced+1\r\n                    }\r\n                }\r\n                else{\r\n                    return{\r\n                        ...state,offStrike:{...state.offStrike,batterIndex:state.onStrike.batterIndex},onStrike:{...state.onStrike,batterIndex:state.onStrike.batterIndex>state.offStrike.batterIndex?state.onStrike.batterIndex+1:state.offStrike.batterIndex+1},team2Wickets:state.onStrike.batterIndex>state.offStrike.batterIndex?state.onStrike.batterIndex+1:state.offStrike.batterIndex+1,team2BallsFaced:state.team2BallsFaced+1\r\n                    }\r\n                }\r\n            }\r\n            else{\r\n\r\n                if(updatedRun%2){\r\n                    if(state.currentTeamBatting===state.team1){\r\n                        return {\r\n                            ...state,team1Total:state.team1Total+updatedRun,team1Stats:{...state.team1Stats,[state.onStrike.batterIndex]:(state.team1Stats[state.onStrike.batterIndex]??0)+updatedRun},team1BallsFaced:state.team1BallsFaced+1,onStrike:{...state.onStrike,batterIndex:state.offStrike.batterIndex},offStrike:{...state.offStrike,batterIndex:state.onStrike.batterIndex}\r\n                        }\r\n                        \r\n                    }\r\n                    else{\r\n                        return{\r\n                            ...state,team2Total:state.team2Total+updatedRun,team2Stats:{...state.team2Stats,[state.onStrike.batterIndex]:(state.team2Stats[state.onStrike.batterIndex]??0)+updatedRun},team2BallsFaced:state.team2BallsFaced+1,onStrike:{...state.onStrike,batterIndex:state.offStrike.batterIndex},offStrike:{...state.offStrike,batterIndex:state.onStrike.batterIndex}\r\n                        }                        \r\n                    }\r\n                }\r\n                else{      \r\n                    if(state.currentTeamBatting===state.team1){\r\n                        return{\r\n                            ...state,team1Total:state.team1Total+updatedRun,team1Stats:{...state.team1Stats,[state.onStrike.batterIndex]:(state.team1Stats[state.onStrike.batterIndex]??0)+updatedRun},team1BallsFaced:state.team1BallsFaced+1\r\n                        }\r\n                    }\r\n                    else{\r\n                        return {\r\n                            ...state,team2Total:state.team2Total+updatedRun,team2Stats:{...state.team2Stats,[state.onStrike.batterIndex]:(state.team2Stats[state.onStrike.batterIndex]??0)+updatedRun},team2BallsFaced:state.team2BallsFaced+1\r\n                       }\r\n                    }\r\n                    \r\n                }\r\n\r\n            }\r\n        }\r\n        case 'COMPLETE':{\r\n            //console.log(state)\r\n           if(state.currentTeamBatting===state.team1){\r\n               return{\r\n                   ...state,currentTeamBatting:state.team2,onStrike:{batterIndex:-1},offStrike:{batterIndex:0}\r\n               }\r\n           }\r\n           else if(state.currentTeamBatting===state.team2 && (state.team2Wickets===10 || state.team2BallsFaced===300)){               \r\n               return{\r\n                   ...state,gameover:true\r\n               }\r\n           }\r\n           else if(state.currentTeamBatting===state.team2 && state.team2Total>state.team1Total){\r\n            return{\r\n                ...state,gameover:true\r\n            }\r\n           }\r\n           else return state;\r\n        }   \r\n        case 'RESET_STATE':\r\n            //console.log('here')\r\n            return {    \r\n                team1:'',\r\n                team2:'', \r\n                currentTeamBatting:'',   \r\n                onStrike:{batterIndex:-1},\r\n                offStrike:{batterIndex:0},\r\n                team1Stats:{},\r\n                team2Stats:{},\r\n                innings:0,\r\n                team1Total:0,\r\n                team2Total:0,\r\n                team1Wickets:0,\r\n                team2Wickets:0,\r\n                gameover:false\r\n            }\r\n        case 'PICK_TEAMS':\r\n            return {\r\n                ...state,team1:action.payload.team1,team2:action.payload.team2,gameover:false,currentTeamBatting:action.payload.team1,team1BallsFaced:0,team2BallsFaced:0\r\n            }\r\n        default:\r\n            return state;\r\n    }    \r\n}\r\n\r\nexport default scoreRunsReducer;","const initialState={}\r\nconst initPickTeams=(state=initialState,action)=>{\r\n    //console.log(action);\r\n    switch(action.type){\r\n        case 'PICK_TEAMS':{\r\n            return {...initialState,team1:action.payload.team1Name,team2:action.payload.team2Name,team1Stats:action.payload.team1Squad,team2Stats:action.payload.team2Squad};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default initPickTeams;","const initialState={}\r\nconst setFirstTeams=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case 'SET_FIRST':{\r\n            if(state.team1!==action.payload.TEAM1)\r\n                return {...initialState,\r\n                    team1:state.team2,team2:state.team1,currentTeamBatting:state.team2,team1Stats:state.team2Stats,team2Stats:state.team1Stats,innings:1\r\n                } \r\n            else\r\n                return state;               \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default setFirstTeams;","const initialState={\r\n    \"India\":{ [-1]:\"Rohit Sharma\",0:\"Shikhar Dhawan\",1:\"Virat Kohli\",2:\"Shreyas Iyer\",3:\"Rishabh Pant\",4:\"KL Rahul\",5:\"Hardik Pandya\",6:\"Ravindra Jadeja\",7:\"Bhuvneshwar Kumar\",8:\"Shardul Thakur\",9:\"Jasprit Bumrah\",10:\"Yuzi Chahal\"},\r\n    \"Pakistan\":{ [-1]:\"Imam-ul-Haq\",0:\"Fakhar Zaman\",1:\"Babar Azam\",2:\"Haider Ali\",3:\"Mohammed Rizwan\",4:\"Iftikhar Ahmed\",5:\"Khushdil Shah\",6:\"Wahab Riaz\",7:\"Shaheen Afrid\",8:\"Musa Khan\",9:\"Muhammad Hasnain\",10:\"Yasir Shah\"},\r\n    \"Australia\":{ [-1]:\"Aaron Finch\",0:\"David Warner\",1:\"Steve Smith\",2:\"Marnus Labuschagne\",3:\"Marcus Stoinis\",4:\"Glenn Maxwell\",5:\"Alex Carey\",6:\"Pat Cummins\",7:\"Mitchell Starc\",8:\"Adam Zampa\",9:\"Josh Hazelwood\",10:\"Daniel Sams\"},\r\n    \"England\":{ [-1]:\"Jason Roy\",0:\"Jonny Bairstow\",1:\"Joe Root\",2:\"Eoin Morgan\",3:\"Ben Stokes\",4:\"Jos Buttler\",5:\"Chris Woakes\",6:\"Liam Plunkett\",7:\"Jofra Archer\",8:\"Adil Rashid\",9:\"Mark Wood\",10:\"Sam Curran\"},\r\n    \"SouthAfrica\":{ [-1]:\"Quinton De Kock\",0:\"Aiden Markram\",1:\"Faf Du Plessis\",2:\"R Van Der Dussen\",3:\"David Miller\",4:\"JP Duminy\",5:\"Temba Bavuma\",6:\"Andile Phehlukwayo\",7:\"Chris Morris\",8:\"Kagiso Rabada\",9:\"Imran Tahir\",10:\"Tabraiz Shamsi\"}\r\n}\r\n\r\nconst getTeams=(state=initialState,action)=>{\r\n    switch(action.type){\r\n\r\n        case 'GET_TEAM':\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default getTeams;","import thunk from 'redux-thunk';\r\nimport { applyMiddleware } from 'redux'\r\nimport { combineReducers } from 'redux'\r\nimport manageScores from '../reducers/manageScores'\r\nimport initPickTeams from '../reducers/initPickTeamsReducer'\r\nimport setFirstTeams from '../reducers/setFirstTeamsReducer'\r\nimport getTeams from '../reducers/teamsReducer'\r\nimport { createStore } from 'redux';\r\n\r\nconst rootReducer=combineReducers({\r\n\r\n    manageScores:manageScores,\r\n    initPickTeams:initPickTeams,\r\n    setFirstTeams:setFirstTeams,\r\n    getTeams:getTeams\r\n\r\n})\r\nconst store=createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nexport default store;","import PickTeams from \"./components/PickTeams\";\nimport { Provider } from 'react-redux';\nimport newStore from './redux-setup/store/'\nimport { AppBar } from \"@material-ui/core\";\nimport {useEffect} from 'react'\n\nfunction App() {\n  useEffect(() => {\n   document.title='Cricket 2021';\n  }, [])\n  return (\n    <Provider store={newStore}>  \n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <h2 style={{alignSelf:'center'}}>Cricket 2021</h2>\n      </AppBar>\n      <PickTeams/>            \n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}