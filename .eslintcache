[{"F:\\reactApps\\book-cricket\\src\\index.js":"1","F:\\reactApps\\book-cricket\\src\\App.js":"2","F:\\reactApps\\book-cricket\\src\\reportWebVitals.js":"3","F:\\reactApps\\book-cricket\\src\\components\\TestComponent.js":"4","F:\\reactApps\\book-cricket\\src\\redux-setup\\store\\index.js":"5","F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\setFirstTeamsReducer.js":"6","F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\manageScores.js":"7","F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\initPickTeamsReducer.js":"8","F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\scoreX.js":"9","F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\completeInnings.js":"10","F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\resetState.js":"11","F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\pickTeams.js":"12","F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\teamsReducer.js":"13","F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\getTeamAction.js":"14","F:\\reactApps\\book-cricket\\src\\components\\ScoreCard.js":"15","F:\\reactApps\\book-cricket\\src\\components\\PickTeams.js":"16","F:\\reactApps\\book-cricket\\src\\helpers\\randomNumber.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":554,"mtime":1612639114384,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":5414,"mtime":1612688224060,"results":"22","hashOfConfig":"19"},{"size":634,"mtime":1612265192616,"results":"23","hashOfConfig":"19"},{"size":560,"mtime":1612076600808,"results":"24","hashOfConfig":"19"},{"size":5270,"mtime":1612687950510,"results":"25","hashOfConfig":"19"},{"size":430,"mtime":1612082967660,"results":"26","hashOfConfig":"19"},{"size":195,"mtime":1612465543838,"results":"27","hashOfConfig":"19"},{"size":142,"mtime":1612086828523,"results":"28","hashOfConfig":"19"},{"size":115,"mtime":1612211158363,"results":"29","hashOfConfig":"19"},{"size":170,"mtime":1612290503033,"results":"30","hashOfConfig":"19"},{"size":1389,"mtime":1612296221151,"results":"31","hashOfConfig":"19"},{"size":120,"mtime":1612265576807,"results":"32","hashOfConfig":"19"},{"size":1543,"mtime":1612640473091,"results":"33","hashOfConfig":"19"},{"size":3410,"mtime":1612640473091,"results":"34","hashOfConfig":"19"},{"size":4308,"mtime":1612670014065,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1dhppus",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\reactApps\\book-cricket\\src\\index.js",[],["72","73"],"F:\\reactApps\\book-cricket\\src\\App.js",[],"F:\\reactApps\\book-cricket\\src\\reportWebVitals.js",[],"F:\\reactApps\\book-cricket\\src\\components\\TestComponent.js",["74","75","76"],"import React,{useEffect, useState} from 'react'\r\nimport { connect } from 'react-redux';\r\nimport scoreX from '../redux-setup/actions/scoreX'\r\nimport completeInnings from '../redux-setup/actions/completeInnings'\r\nimport resetState from '../redux-setup/actions/resetState'\r\nimport ScoreCard from './ScoreCard';\r\nimport { Button } from '@material-ui/core';\r\n\r\nfunction TestComponent(props) {\r\n\r\n    const [message, setMessage] = useState(\"\")\r\n    const [inningsBreak, setInningsBreak] = useState(0)\r\n    // useEffect(() => {\r\n    //     props.pickTeamDispatch();        \r\n    // }, [])\r\n   \r\n     useEffect(()=>{         \r\n         console.log('inside useEffect')\r\n         if(!props.scoreData.gameover){\r\n            if(props.scoreData.team1Wickets===10 || props.scoreData.team1BallsFaced===300){\r\n                props.completeInningsDispatch('team1');\r\n            }\r\n        }\r\n\r\n        if(props.scoreData.team1Wickets===10 || props.scoreData.team1BallsFaced===300){\r\n            if(props.scoreData.team2Total>props.scoreData.team1Total){                \r\n                setMessage(`${props.scoreData.team2} won by ${10-props.scoreData.team2Wickets} wickets`)\r\n            }\r\n            else if(props.scoreData.team2Total===props.scoreData.team1Total && props.scoreData.team2Wickets===10){\r\n                setMessage(`Match Tied`)\r\n            }\r\n            else if(props.scoreData.team2Total<props.scoreData.team1Total &&props.scoreData.team2Wickets===10){\r\n                setMessage(`${props.scoreData.team1} beat ${props.scoreData.team2} by ${props.scoreData.team1Total-props.scoreData.team2Total} runs`)\r\n            }\r\n        }\r\n\r\n     },[props.scoreData])\r\n\r\n    return (\r\n        <div>            \r\n            {   \r\n                <>\r\n                <span className='score_data' style={{display:'flex',justifyContent:'center'}}>\r\n                    <h3>{props.scoreData.team1}</h3>&nbsp;&nbsp;\r\n                    <h3>{props.scoreData.team1Total}/{props.scoreData.team1Wickets} Overs:{props.scoreData.team1BallsFaced>=60?(props.scoreData.team1BallsFaced/6).toPrecision(2):(props.scoreData.team1BallsFaced/6).toPrecision(1)}.{props.scoreData.team1BallsFaced%6} RR:{(props.scoreData.team1Total/((props.scoreData.team1BallsFaced||1)/6)).toPrecision(3)??0}</h3>\r\n                </span>\r\n                \r\n                <span className='score_data' style={{display:'flex',justifyContent:'center'}}>\r\n                    <h3>{props.scoreData.team2}</h3>&nbsp;&nbsp;\r\n                    <h3>{props.scoreData.team2Total}/{props.scoreData.team2Wickets} Overs:{props.scoreData.team2BallsFaced>=60?(props.scoreData.team2BallsFaced/6).toPrecision(2):(props.scoreData.team2BallsFaced/6).toPrecision(1)}.{props.scoreData.team2BallsFaced%6} RR:{(props.scoreData.team2Total/((props.scoreData.team2BallsFaced||1)/6)).toPrecision(3)??0}</h3>                \r\n                </span>\r\n                </>\r\n            }\r\n            {<br/>}\r\n            {\r\n                    (props.scoreData.currentTeamBatting===props.scoreData.team1)?<div><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team1][props.scoreData.onStrike.batterIndex]}üëâüèæ{props.scoreData.team1Stats[props.scoreData.onStrike.batterIndex]??0}</span><br/><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team1][props.scoreData.offStrike.batterIndex]}üëâüèæ{props.scoreData.team1Stats[props.scoreData.offStrike.batterIndex]??0}</span></div>:<div><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team2][props.scoreData.onStrike.batterIndex]}üëâüèæ{props.scoreData.team2Stats[props.scoreData.onStrike.batterIndex]??0}</span><br/><span style={{display:'flex',justifyContent:'center'}}>{props.teamData[props.scoreData.team2][props.scoreData.offStrike.batterIndex]}üëâüèæ{props.scoreData.team2Stats[props.scoreData.offStrike.batterIndex]??0}</span></div>\r\n            }\r\n            {<hr/>}\r\n            {   \r\n            \r\n                props.scoreData.gameover?<><span style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>{message}</span><br/><span style={{display:'flex',justifyContent:'center'}}><Button variant=\"contained\" color=\"primary\" onClick={()=>{props.resetDispatch()}}>Play Again</Button></span></>:<span style={{display:'flex',justifyContent:'center'}}><Button color=\"primary\" variant=\"contained\" onClick={()=>{for(let i=0;i<6;i++)props.scoreDispatch((Math.floor(Math.random()*7)))}}>PLAY</Button></span>                \r\n            }\r\n\r\n            {props.scoreData.gameover?<ScoreCard team1={props.scoreData.team1} team2={props.scoreData.team2} teamData={props.teamData} team1Stats={props.scoreData.team1Stats} team2Stats={props.scoreData.team2Stats}/>:<></>}\r\n                                      \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    //console.log(state);\r\n    return{\r\n        scoreData:state.manageScores,\r\n        teamData:state.getTeams\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n\r\n    return{\r\n        scoreDispatch:(X)=>dispatch(scoreX(null,X)),\r\n        completeInningsDispatch:(team)=>dispatch(completeInnings(team)),\r\n        resetDispatch:()=>dispatch(resetState()),\r\n        //pickTeamDispatch:()=>dispatch(pickTeams(\"India\",\"Pakistan\")),        \r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TestComponent)\r\n","F:\\reactApps\\book-cricket\\src\\redux-setup\\store\\index.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\setFirstTeamsReducer.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\manageScores.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\initPickTeamsReducer.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\scoreX.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\completeInnings.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\resetState.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\pickTeams.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\reducers\\teamsReducer.js",[],"F:\\reactApps\\book-cricket\\src\\redux-setup\\actions\\getTeamAction.js",[],"F:\\reactApps\\book-cricket\\src\\components\\ScoreCard.js",[],"F:\\reactApps\\book-cricket\\src\\components\\PickTeams.js",[],"F:\\reactApps\\book-cricket\\src\\helpers\\randomNumber.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":12,"column":12,"nodeType":"83","messageId":"84","endLine":12,"endColumn":24},{"ruleId":"81","severity":1,"message":"85","line":12,"column":26,"nodeType":"83","messageId":"84","endLine":12,"endColumn":41},{"ruleId":"86","severity":1,"message":"87","line":37,"column":8,"nodeType":"88","endLine":37,"endColumn":25,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'inningsBreak' is assigned a value but never used.","Identifier","unusedVar","'setInningsBreak' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [props, props.scoreData]",{"range":"95","text":"96"},[1650,1667],"[props, props.scoreData]"]