[{"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\index.js":"1","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\reportWebVitals.js":"2","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\App.js":"3","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\components\\PickTeams.js":"4","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\store\\index.js":"5","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\pickTeams.js":"6","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\initPickTeamsReducer.js":"7","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\setFirstTeamsReducer.js":"8","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\teamsReducer.js":"9","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\manageScores.js":"10","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\components\\ScoreCard.js":"11","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\resetState.js":"12","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\scoreX.js":"13","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\completeInnings.js":"14","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\helpers\\randomNumber.js":"15","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\components\\MatchComponent.js":"16","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\getTeamAction.js":"17","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\helpers\\asyncHelper.js":"18","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\dynamicSquads.js":"19","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\dynamicSquadAction.js":"20"},{"size":500,"mtime":1657995727381,"results":"21","hashOfConfig":"22"},{"size":364,"mtime":1657995727655,"results":"23","hashOfConfig":"22"},{"size":564,"mtime":1657995727145,"results":"24","hashOfConfig":"22"},{"size":5416,"mtime":1662609930520,"results":"25","hashOfConfig":"22"},{"size":642,"mtime":1657995727647,"results":"26","hashOfConfig":"22"},{"size":177,"mtime":1657995727430,"results":"27","hashOfConfig":"22"},{"size":460,"mtime":1657995727481,"results":"28","hashOfConfig":"22"},{"size":542,"mtime":1657995727584,"results":"29","hashOfConfig":"22"},{"size":2462,"mtime":1672725275047,"results":"30","hashOfConfig":"22"},{"size":11114,"mtime":1658031741073,"results":"31","hashOfConfig":"22"},{"size":3860,"mtime":1658031740867,"results":"32","hashOfConfig":"22"},{"size":99,"mtime":1657995727433,"results":"33","hashOfConfig":"22"},{"size":164,"mtime":1658030337783,"results":"34","hashOfConfig":"22"},{"size":129,"mtime":1657995727401,"results":"35","hashOfConfig":"22"},{"size":5958,"mtime":1662609930520,"results":"36","hashOfConfig":"22"},{"size":8622,"mtime":1658030341161,"results":"37","hashOfConfig":"22"},{"size":221,"mtime":1657995727421,"results":"38","hashOfConfig":"22"},{"size":256,"mtime":1657995727324,"results":"39","hashOfConfig":"22"},{"size":246,"mtime":1657995727466,"results":"40","hashOfConfig":"22"},{"size":138,"mtime":1657995727410,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1m3e0sd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\index.js",[],["85","86"],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\reportWebVitals.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\App.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\components\\PickTeams.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\store\\index.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\pickTeams.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\initPickTeamsReducer.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\setFirstTeamsReducer.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\teamsReducer.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\manageScores.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\components\\ScoreCard.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\resetState.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\scoreX.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\completeInnings.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\helpers\\randomNumber.js",["87","88","89"],"const getCeilValue = (prefixArray, randomValue) => {\r\n  var ceilValue = -2;\r\n  for (var i = 0; i < prefixArray.length; ) {\r\n    if (randomValue >= prefixArray[i]) {\r\n      i++;\r\n    } else {\r\n      ceilValue = i;\r\n      break;\r\n    }\r\n  }\r\n  if (ceilValue === -2) return prefixArray.length - 1;\r\n\r\n  return ceilValue;\r\n};\r\n\r\nconst frequencyOffset = (frequency, pitchType = null) => {\r\n  switch (pitchType) {\r\n    case \"Green\":\r\n      {\r\n        frequency[0] += 2;\r\n        frequency[2] += 2;\r\n        frequency[1] += 5;\r\n        frequency[6] -= 1;\r\n        frequency[5] -= 1;\r\n      }\r\n      break;\r\n\r\n    case \"Hard\":\r\n      {\r\n        frequency[0] -= 1;\r\n        frequency[2] += 2;\r\n        frequency[1] -= 4;\r\n        frequency[6] += 3;\r\n        frequency[5] += 2;\r\n      }\r\n      break;\r\n\r\n    case \"Wet\":\r\n      {\r\n        frequency[0] += 1;\r\n        frequency[2] += 6;\r\n        frequency[1] += 4;\r\n        frequency[6] += 3;\r\n        frequency[5] -= 6;\r\n        frequency[4] += 5;\r\n      }\r\n      break;\r\n\r\n    default:\r\n      return frequency;\r\n  }\r\n  return frequency;\r\n};\r\n\r\nconst RandomWithIndex = (batterIndex, pitchType = null) => {\r\n  const cumulativeSum = (\r\n    (sum) => (value) =>\r\n      (sum += value)\r\n  )(0);\r\n  var arr = [-1, 0, 1, 2, 3, 4, 6];\r\n  var freq = [];\r\n  var prefix = [];\r\n\r\n  switch (batterIndex) {\r\n    case -1: {\r\n      freq = [3, 80, 50, 10, 1, 15, 5]; // RG Sharma 156 balls  166\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 0: {\r\n      freq = [3, 70, 45, 14, 0, 12, 2]; //143 balls Shikhar 133\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 1: {\r\n      freq = [3, 91, 50, 16, 1, 17, 2]; //Kohli 177 balls 165\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 2: {\r\n      freq = [4, 80, 45, 16, 1, 10, 5]; //Shreyas 157 balls 150\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 3: {\r\n      freq = [5, 91, 45, 7, 1, 18, 6]; //Pant 149 balls 178\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 4: {\r\n      freq = [5, 91, 40, 5, 1, 12, 7]; //KL R 160 balls 181\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 5: {\r\n      freq = [6, 80, 38, 5, 1, 15, 8]; //Pandya 158 balls 181\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 6: {\r\n      freq = [6, 80, 45, 16, 1, 18, 4]; //Jadeja 165 balls 176\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 8: {\r\n      freq = [9, 100, 15, 8, 1, 18, 6]; //Thakur 144 balls 127\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 7: {\r\n      freq = [9, 100, 25, 15, 1, 18, 2]; //Bhuvi 160 balls 142\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    case 9: {\r\n      freq = [9, 100, 25, 5, 1, 18, 2];\r\n      freq =\r\n        pitchType == null || pitchType === \"NORMAL\"\r\n          ? freq\r\n          : frequencyOffset(freq, pitchType);\r\n      prefix = freq.map(cumulativeSum);\r\n      let random = Math.floor(Math.random() * prefix[prefix.length - 1]);\r\n      let index_rc = getCeilValue(prefix, random);\r\n      return arr[index_rc];\r\n    }\r\n    default: {\r\n      return 1;\r\n    }\r\n  }\r\n};\r\n\r\nexport default RandomWithIndex;\r\n","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\components\\MatchComponent.js",["90","91"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport scoreX from \"../redux-setup/actions/scoreX\";\nimport completeInnings from \"../redux-setup/actions/completeInnings\";\nimport resetState from \"../redux-setup/actions/resetState\";\nimport ScoreCard from \"./ScoreCard\";\nimport { Button } from \"@material-ui/core\";\nimport getTeamAction from \"../redux-setup/actions/getTeamAction\";\nimport { asyncHelper } from \"../helpers/asyncHelper\";\nimport dynamicSquadAction from \"../redux-setup/actions/dynamicSquadAction\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nfunction MatchComponent(props) {\n  const [message, setMessage] = useState(\"\");\n  const track = useRef({});\n  const dynamicSquads = useSelector((state) => state.dynamicSquads);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const url =\n      \"https://raw.githubusercontent.com/Ad1tyaV/pyTestFiles/master/cric-v1.json\";\n    let data;\n    if (dynamicSquads) {\n      data = asyncHelper(url);\n      data.then((response) => {\n        if (response[0] !== 200) {\n          props.teamsDispatch(\"GET_TEAM\", response[1]);\n        } else {\n          props.teamsDispatch(\"SET_TEAM\", response[1]);\n        }\n      });\n\n      dispatch(dynamicSquadAction(\"DISABLE\"));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!props.scoreData.gameover) {\n      if (\n        props.scoreData.team1Wickets === 10 ||\n        props.scoreData.team1BallsFaced === 300\n      ) {\n        if (Object.keys(track.current).length === 0) {\n          track.current = {};\n          track.current = {\n            ...track.current,\n            team1: {\n              ...track.current.team1,\n              player_1: props.scoreData.onStrike.batterIndex,\n              player_2: props.scoreData.offStrike.batterIndex,\n            },\n          };\n        }\n        props.completeInningsDispatch(\"team1\");\n      }\n    }\n    if (\n      props.scoreData.team1Wickets === 10 ||\n      props.scoreData.team1BallsFaced === 300\n    ) {\n      if (props.scoreData.team2Total > props.scoreData.team1Total) {\n        track.current = {\n          ...track.current,\n          team2: {\n            ...track.current.team1,\n            player_1: props.scoreData.onStrike.batterIndex,\n            player_2: props.scoreData.offStrike.batterIndex,\n          },\n        };\n        setMessage(\n          `${props.scoreData.team2} won by ${\n            10 - props.scoreData.team2Wickets\n          } wickets`\n        );\n      } else if (\n        props.scoreData.team2Total === props.scoreData.team1Total &&\n        (props.scoreData.team2Wickets === 10 ||\n          props.scoreData.team2BallsFaced === 300)\n      ) {\n        track.current = {\n          ...track.current,\n          team2: {\n            ...track.current.team1,\n            player_1: props.scoreData.onStrike.batterIndex,\n            player_2: props.scoreData.offStrike.batterIndex,\n          },\n        };\n        setMessage(`Match Tied`);\n      } else if (\n        props.scoreData.team2Total < props.scoreData.team1Total &&\n        (props.scoreData.team2Wickets === 10 ||\n          props.scoreData.team2BallsFaced === 300)\n      ) {\n        track.current = {\n          ...track.current,\n          team2: {\n            ...track.current.team1,\n            player_1: props.scoreData.onStrike.batterIndex,\n            player_2: props.scoreData.offStrike.batterIndex,\n          },\n        };\n        setMessage(\n          `${props.scoreData.team1} beat ${props.scoreData.team2} by ${\n            props.scoreData.team1Total - props.scoreData.team2Total\n          } runs`\n        );\n      }\n    }\n  }, [props.scoreData]);\n\n  return (\n    <div style={{ color: \"whitesmoke\" }}>\n      {\n        <>\n          <span\n            className=\"score_data\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <h3>{props.scoreData.team1}</h3>&nbsp;&nbsp;\n            <h3>\n              {props.scoreData.team1Total}/{props.scoreData.team1Wickets} Overs:\n              {Math.floor(props.scoreData.team1BallsFaced / 6)}.\n              {props.scoreData.team1BallsFaced % 6} RR:\n              {(\n                props.scoreData.team1Total /\n                ((props.scoreData.team1BallsFaced || 1) / 6)\n              ).toPrecision(3) ?? 0}\n            </h3>\n          </span>\n\n          <span\n            className=\"score_data\"\n            style={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <h3>{props.scoreData.team2}</h3>&nbsp;&nbsp;\n            <h3>\n              {props.scoreData.team2Total}/{props.scoreData.team2Wickets} Overs:\n              {Math.floor(props.scoreData.team2BallsFaced / 6)}.\n              {props.scoreData.team2BallsFaced % 6} RR:\n              {(\n                props.scoreData.team2Total /\n                ((props.scoreData.team2BallsFaced || 1) / 6)\n              ).toPrecision(3) ?? 0}\n            </h3>\n          </span>\n        </>\n      }\n      {<br />}\n      {props.scoreData.currentTeamBatting === props.scoreData.team1 ? (\n        <div>\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team1][\n                props.scoreData.onStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team1Stats[props.scoreData.onStrike.batterIndex] ??\n              0}\n          </span>\n          <br />\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team1][\n                props.scoreData.offStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team1Stats[\n              props.scoreData.offStrike.batterIndex\n            ] ?? 0}\n          </span>\n        </div>\n      ) : (\n        <div>\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team2][\n                props.scoreData.onStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team2Stats[props.scoreData.onStrike.batterIndex] ??\n              0}\n          </span>\n          <br />\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            {\n              props.teamData[props.scoreData.team2][\n                props.scoreData.offStrike.batterIndex\n              ]\n            }\n            👉🏾\n            {props.scoreData.team2Stats[\n              props.scoreData.offStrike.batterIndex\n            ] ?? 0}\n          </span>\n        </div>\n      )}\n      {<hr />}\n      {props.scoreData.gameover ? (\n        <>\n          <span\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              fontWeight: \"600\",\n            }}\n          >\n            {message}\n          </span>\n          <br />\n          <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                track.current = {};\n                props.resetDispatch();\n              }}\n            >\n              Play Again\n            </Button>\n          </span>\n        </>\n      ) : (\n        <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => {\n              for (let i = 0; i < 6; i++)\n                // props.scoreDispatch(Math.floor(Math.random() * 7));\n                props.scoreDispatch(props.pitchType);\n            }}\n          >\n            PLAY\n          </Button>\n        </span>\n      )}\n\n      {props.scoreData.gameover ? (\n        <ScoreCard\n          track={track.current}\n          team1={props.scoreData.team1}\n          team2={props.scoreData.team2}\n          teamData={props.teamData}\n          team1Stats={props.scoreData.team1Stats}\n          team2Stats={props.scoreData.team2Stats}\n        />\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  //console.log(state);\n  return {\n    scoreData: state.manageScores,\n    teamData: state.getTeams,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    scoreDispatch: (X) => dispatch(scoreX(null, X)),\n    completeInningsDispatch: (team) => dispatch(completeInnings(team)),\n    resetDispatch: () => dispatch(resetState()),\n    teamsDispatch: (type, data) => dispatch(getTeamAction(type, data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchComponent);\n","D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\getTeamAction.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\helpers\\asyncHelper.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\reducers\\dynamicSquads.js",[],"D:\\Projects\\react-js\\book-cricket-react-redux\\src\\redux-setup\\actions\\dynamicSquadAction.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":19,"column":7,"nodeType":"98","messageId":"99","endLine":25,"endColumn":8},{"ruleId":"96","severity":1,"message":"97","line":29,"column":7,"nodeType":"98","messageId":"99","endLine":35,"endColumn":8},{"ruleId":"96","severity":1,"message":"97","line":39,"column":7,"nodeType":"98","messageId":"99","endLine":46,"endColumn":8},{"ruleId":"100","severity":1,"message":"101","line":36,"column":6,"nodeType":"102","endLine":36,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"104","line":110,"column":6,"nodeType":"102","endLine":110,"endColumn":23,"suggestions":"105"},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'dynamicSquads', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["108"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [dispatch, dynamicSquads, props]",{"range":"114","text":"115"},"Update the dependencies array to be: [props, props.scoreData]",{"range":"116","text":"117"},[1320,1322],"[dispatch, dynamicSquads, props]",[3641,3658],"[props, props.scoreData]"]